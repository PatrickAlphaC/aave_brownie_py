{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_jobId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequested",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_volume",
          "type": "uint256"
        }
      ],
      "name": "fulfill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestVolumeData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "source",
          "type": "string"
        }
      ],
      "name": "stringToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "volume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/interfaces/ENSInterface.sol",
    "11": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
    "12": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/interfaces/PointerInterface.sol",
    "13": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/vendor/BufferChainlink.sol",
    "14": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/vendor/CBORChainlink.sol",
    "15": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/vendor/ENSResolver.sol",
    "17": "contracts/APIConsumer.sol",
    "3": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/Chainlink.sol",
    "4": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/ChainlinkClient.sol",
    "9": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/APIConsumer.sol",
    "exportedSymbols": {
      "APIConsumer": [
        151
      ]
    },
    "id": 152,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:17"
      },
      {
        "absolutePath": "/Users/patrick/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.0.2/contracts/src/v0.6/ChainlinkClient.sol",
        "file": "@chainlink/contracts/src/v0.6/ChainlinkClient.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 152,
        "sourceUnit": 1234,
        "src": "57:59:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ChainlinkClient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1233,
              "src": "142:15:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkClient_$1233",
                "typeString": "contract ChainlinkClient"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "142:15:17"
          }
        ],
        "contractDependencies": [
          1233
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 151,
        "linearizedBaseContracts": [
          151,
          1233
        ],
        "name": "APIConsumer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c618a1e4",
            "id": 6,
            "mutability": "mutable",
            "name": "volume",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 151,
            "src": "167:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 151,
            "src": "199:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "199:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "jobId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 151,
            "src": "227:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "227:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 151,
            "src": "254:19:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "254:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "536:397:17",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "_link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "550:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "567:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "559:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "559:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "550:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38,
                    "nodeType": "Block",
                    "src": "627:49:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 35,
                              "name": "_link",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "659:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34,
                            "name": "setChainlinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "641:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "641:24:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "641:24:17"
                      }
                    ]
                  },
                  "id": 39,
                  "nodeType": "IfStatement",
                  "src": "546:130:17",
                  "trueBody": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "571:50:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30,
                            "name": "setPublicChainlinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "585:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "585:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32,
                        "nodeType": "ExpressionStatement",
                        "src": "585:25:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "849:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "858:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "849:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "849:16:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "875:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "_jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "899:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 45,
                        "name": "stringToBytes32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "883:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory) pure returns (bytes32)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "883:23:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "875:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "875:31:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "916:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "922:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "916:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "916:10:17"
                }
              ]
            },
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "284:160:17",
              "text": " Network: Kovan\n Oracle: 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e\n Job ID: 29fa9aa13bf1468788b7cc4a500a45b8\n Fee: 0.1 LINK"
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "461:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_jobId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "478:20:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "500:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 55,
                  "src": "514:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:68:17"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:17"
            },
            "scope": 151,
            "src": "449:484:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1192:894:17",
              "statements": [
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "request",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 109,
                      "src": "1202:32:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                        "typeString": "struct Chainlink.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 63,
                        "name": "Chainlink.Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2212,
                        "src": "1202:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$2212_storage_ptr",
                          "typeString": "struct Chainlink.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1259:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1274:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_APIConsumer_$151",
                              "typeString": "contract APIConsumer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_APIConsumer_$151",
                              "typeString": "contract APIConsumer"
                            }
                          ],
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1266:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1266:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1281:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_APIConsumer_$151",
                              "typeString": "contract APIConsumer"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fulfill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 126,
                          "src": "1281:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,uint256) external"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1281:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 65,
                      "name": "buildChainlinkRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "1237:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$2212_memory_ptr_$",
                        "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                      "typeString": "struct Chainlink.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1202:101:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "676574",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1387:5:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        "value": "get"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1394:75:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3fa6b402eb4c49347f9ac6c8c8e0baf0eacaf39bcd59583feb12d9b90720124",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\""
                        },
                        "value": "https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3fa6b402eb4c49347f9ac6c8c8e0baf0eacaf39bcd59583feb12d9b90720124",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1375:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "1375:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$2212_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$2212_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:95:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:95:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "70617468",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1783:6:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        "value": "path"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5241572e4554482e5553442e564f4c554d453234484f5552",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1791:26:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fabe19e2b233d69e5bb0f2ec1fa1986bd1fc7cf3b77bfeff933cad52374b02b",
                          "typeString": "literal_string \"RAW.ETH.USD.VOLUME24HOUR\""
                        },
                        "value": "RAW.ETH.USD.VOLUME24HOUR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fabe19e2b233d69e5bb0f2ec1fa1986bd1fc7cf3b77bfeff933cad52374b02b",
                          "typeString": "literal_string \"RAW.ETH.USD.VOLUME24HOUR\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1771:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "1771:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$2212_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$2212_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:47:17"
                },
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "timesAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 109,
                      "src": "1910:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1910:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1928:2:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1932:2:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "1928:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1910:24:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74696d6573",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1959:7:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        "value": "times"
                      },
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "timesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1968:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1944:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2362,
                      "src": "1944:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$2212_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$2212_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,int256) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1944:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1944:36:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2058:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "2066:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2075:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$2212_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 103,
                      "name": "sendChainlinkRequestTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "2035:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$2212_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 60,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "2028:51:17"
                }
              ]
            },
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "943:175:17",
              "text": " Create a Chainlink request to retrieve API response, find the target\n data, then multiply by 1000000000000000000 (to remove decimal places from data)."
            },
            "functionSelector": "6021abac",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestVolumeData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:2:17"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1168:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1167:19:17"
            },
            "scope": 151,
            "src": "1123:963:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2268:33:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "2278:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "2287:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2278:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:16:17"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "2096:62:17",
              "text": " Receive the response in the form of uint256"
            },
            "functionSelector": "4357855e",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 118,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 113,
                    "src": "2252:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "recordChainlinkFulfillment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1213,
                  "src": "2225:26:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2225:38:17"
              }
            ],
            "name": "fulfill",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "2181:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_volume",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "2201:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2180:37:17"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2268:0:17"
            },
            "scope": 151,
            "src": "2164:137:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2391:221:17",
              "statements": [
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "tempEmptyStringTest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 149,
                      "src": "2401:32:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2401:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2442:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2436:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2436:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:13:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2401:48:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "tempEmptyStringTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2463:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2463:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2493:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2463:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 147,
                  "nodeType": "IfStatement",
                  "src": "2459:72:17",
                  "trueBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "2496:35:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2517:3:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "functionReturnParameters": 132,
                        "id": 145,
                        "nodeType": "Return",
                        "src": "2510:10:17"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2550:56:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2564:32:17",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "source",
                                  "nodeType": "YulIdentifier",
                                  "src": "2584:6:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2592:2:17",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2580:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2580:15:17"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2574:5:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2574:22:17"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "2564:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 131,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2564:6:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 128,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2584:6:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 148,
                  "nodeType": "InlineAssembly",
                  "src": "2541:65:17"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cfb51928",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stringToBytes32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 150,
                  "src": "2332:20:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2331:22:17"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 150,
                  "src": "2375:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:16:17"
            },
            "scope": 151,
            "src": "2307:305:17",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 152,
        "src": "118:2496:17"
      }
    ],
    "src": "32:2583:17"
  },
  "bytecode": "608060405260016004553480156200001657600080fd5b5060405162000dfb38038062000dfb833981810160405260808110156200003c57600080fd5b8151602083018051604051929492938301929190846401000000008211156200006457600080fd5b9083019060208201858111156200007a57600080fd5b82516401000000008111828201881017156200009557600080fd5b82525081516020918201929091019080838360005b83811015620000c4578181015183820152602001620000aa565b50505050905090810190601f168015620000f25780820380516001836020036101000a031916815260200191505b506040908152602082015191015190925090506001600160a01b03811662000124576200011e62000165565b6200012f565b6200012f81620001ed565b600780546001600160a01b0319166001600160a01b03861617905562000155836200020f565b6008555060095550620002339050565b620001eb73c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620001b757600080fd5b505afa158015620001cc573d6000803e3d6000fd5b505050506040513d6020811015620001e357600080fd5b5051620001ed565b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b80516000908290620002265750600090506200022e565b505060208101515b919050565b610bb880620002436000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac14610076578063c618a1e414610090578063cfb5192814610098575b600080fd5b6100746004803603604081101561006757600080fd5b508035906020013561013e565b005b61007e6101df565b60408051918252519081900360200190f35b61007e6102fa565b61007e600480360360208110156100ae57600080fd5b8101906020810181356401000000008111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111640100000000831117156100fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610300945050505050565b60008281526005602052604090205482906001600160a01b031633146101955760405162461bcd60e51b8152600401808060200182810382526028815260200180610b126028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a25060065550565b60006101e9610a9f565b6008546101fe90306321abc2af60e11b610322565b90506102406040518060400160405280600381526020016219d95d60ea1b815250604051806080016040528060498152602001610b3a60499139839190610347565b6102a6604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601881526020017f5241572e4554482e5553442e564f4c554d453234484f55520000000000000000815250836103479092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152670de0b6b3a7640000906102d89083908361036a565b6007546009546102f3916001600160a01b0316908490610388565b9250505090565b60065481565b8051600090829061031557506000905061031d565b505060208101515b919050565b61032a610a9f565b610332610a9f565b61033e81868686610556565b95945050505050565b60808301516103569083610593565b60808301516103659082610593565b505050565b60808301516103799083610593565b608083015161036590826105aa565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080546001600160a01b0319166001600160a01b038816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a26002546001600160a01b0316634000aea0858461043087610609565b6040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610491578181015183820152602001610479565b50505050905090810190601f1680156104be5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156104df57600080fd5b505af11580156104f3573d6000803e3d6000fd5b505050506040513d602081101561050957600080fd5b50516105465760405162461bcd60e51b8152600401808060200182810382526023815260200180610aef6023913960400191505060405180910390fd5b6004805460010190559392505050565b61055e610a9f565b61056e856080015161010061072d565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6105a0826003835161076d565b6103658282610847565b67ffffffffffffffff198112156105ca576105c58282610868565b610605565b67ffffffffffffffff8113156105e4576105c582826108a1565b600081126105f8576105c58260008361076d565b610605826001831961076d565b5050565b6060634042994660e01b6000808460000151856020015186604001518760600151600189608001516000015160405160240180896001600160a01b03168152602001888152602001878152602001866001600160a01b03168152602001856001600160e01b031916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106bb5781810151838201526020016106a3565b50505050905090810190601f1680156106e85780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909d169c909c17909b5250989950505050505050505050919050565b610735610ad4565b602082061561074a5760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b6017811161078e576107888360e0600585901b1683176108d6565b50610365565b60ff81116107b8576107ab836018611fe0600586901b16176108d6565b50610788838260016108ee565b61ffff81116107e3576107d6836019611fe0600586901b16176108d6565b50610788838260026108ee565b63ffffffff81116108105761080383601a611fe0600586901b16176108d6565b50610788838260046108ee565b67ffffffffffffffff81116103655761083483601b611fe0600586901b16176108d6565b50610841838260086108ee565b50505050565b61084f610ad4565b6108618384600001515184855161090f565b9392505050565b6108738260c36108d6565b50610605828260001903604051602001808281526020019150506040516020818303038152906040526109bb565b6108ac8260c26108d6565b506106058282604051602001808281526020019150506040516020818303038152906040526109bb565b6108de610ad4565b61086183846000015151846109c8565b6108f6610ad4565b610907848560000151518585610a13565b949350505050565b610917610ad4565b825182111561092557600080fd5b8460200151828501111561094f5761094f856109478760200151878601610a71565b600202610a88565b60008086518051876020830101935080888701111561096e5787860182525b505050602084015b602084106109955780518252601f199093019260209182019101610976565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6105a0826002835161076d565b6109d0610ad4565b836020015183106109ec576109ec848560200151600202610a88565b835180516020858301018481535080851415610a09576001810182525b5093949350505050565b610a1b610ad4565b84602001518483011115610a3857610a3885858401600202610a88565b60006001836101000a039050855183868201018583198251161781525080518487011115610a665783860181525b509495945050505050565b600081831115610a82575081610767565b50919050565b8151610a94838361072d565b506108418382610847565b6040805160a081018252600080825260208201819052918101829052606081019190915260808101610acf610ad4565b905290565b60405180604001604052806060815260200160008152509056fe756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65536f75726365206d75737420626520746865206f7261636c65206f6620746865207265717565737468747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a26469706673582212200e56e22abf3ecb0ba34bf842f04a903056bd0bc8a8bb6ab9b26b37f18444ea6b64736f6c634300060c0033",
  "bytecodeSha1": "e0dece31c63d2824af517cb6641c6dc799745328",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "APIConsumer",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "BufferChainlink.init": {
          "61": [
            1077,
            1095,
            false
          ]
        },
        "BufferChainlink.max": {
          "66": [
            1995,
            2000,
            false
          ]
        },
        "BufferChainlink.write": {
          "62": [
            2815,
            2833,
            true
          ],
          "63": [
            2845,
            2869,
            false
          ]
        },
        "BufferChainlink.writeInt": {
          "65": [
            8764,
            8788,
            false
          ]
        },
        "BufferChainlink.writeUint8": {
          "64": [
            5093,
            5112,
            false
          ]
        }
      },
      "14": {
        "CBORChainlink.encodeInt": {
          "67": [
            1842,
            1870,
            false
          ],
          "68": [
            1936,
            1962,
            false
          ],
          "69": [
            2022,
            2032,
            false
          ]
        },
        "CBORChainlink.encodeType": {
          "70": [
            823,
            834,
            false
          ],
          "71": [
            914,
            927,
            false
          ],
          "72": [
            1041,
            1056,
            false
          ],
          "73": [
            1170,
            1189,
            false
          ],
          "74": [
            1303,
            1330,
            false
          ]
        }
      },
      "15": {},
      "17": {},
      "3": {},
      "4": {
        "ChainlinkClient.sendChainlinkRequestTo": {
          "75": [
            3409,
            3469,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "BufferChainlink.append": {
          "39": [
            4634,
            4686
          ]
        },
        "BufferChainlink.appendInt": {
          "45": [
            9645,
            9692
          ]
        },
        "BufferChainlink.appendUint8": {
          "44": [
            5946,
            5990
          ]
        },
        "BufferChainlink.init": {
          "28": [
            1105,
            1137
          ],
          "29": [
            1191,
            1214
          ]
        },
        "BufferChainlink.max": {
          "57": [
            2010,
            2018
          ],
          "58": [
            2030,
            2038
          ]
        },
        "BufferChainlink.resize": {
          "59": [
            1876,
            1895
          ],
          "60": [
            1901,
            1920
          ]
        },
        "BufferChainlink.write": {
          "46": [
            2807,
            2834
          ],
          "47": [
            2879,
            2924
          ],
          "48": [
            3475,
            3484
          ],
          "49": [
            3552,
            3562
          ],
          "50": [
            3570,
            3579
          ],
          "51": [
            3816,
            3826
          ]
        },
        "BufferChainlink.writeInt": {
          "55": [
            8798,
            8826
          ],
          "56": [
            9277,
            9287
          ]
        },
        "BufferChainlink.writeUint8": {
          "53": [
            5122,
            5151
          ],
          "54": [
            5589,
            5599
          ]
        }
      },
      "14": {
        "CBORChainlink.encodeBigNum": {
          "42": [
            2481,
            2544
          ],
          "43": [
            2552,
            2593
          ]
        },
        "CBORChainlink.encodeBytes": {
          "52": [
            2304,
            2351
          ]
        },
        "CBORChainlink.encodeInt": {
          "23": [
            1886,
            1916
          ],
          "24": [
            1978,
            2002
          ],
          "25": [
            2048,
            2092
          ],
          "26": [
            2123,
            2181
          ]
        },
        "CBORChainlink.encodeSignedBigNum": {
          "40": [
            2702,
            2774
          ],
          "41": [
            2782,
            2828
          ]
        },
        "CBORChainlink.encodeString": {
          "21": [
            2943,
            2998
          ],
          "22": [
            3008,
            3032
          ]
        },
        "CBORChainlink.encodeType": {
          "30": [
            850,
            894
          ],
          "31": [
            943,
            984
          ],
          "32": [
            998,
            1021
          ],
          "33": [
            1072,
            1113
          ],
          "34": [
            1127,
            1150
          ],
          "35": [
            1205,
            1246
          ],
          "36": [
            1260,
            1283
          ],
          "37": [
            1346,
            1387
          ],
          "38": [
            1401,
            1424
          ]
        }
      },
      "15": {},
      "17": {
        "APIConsumer.fulfill": {
          "0": [
            2278,
            2294
          ]
        },
        "APIConsumer.requestVolumeData": {
          "1": [
            1375,
            1470
          ],
          "2": [
            1771,
            1818
          ],
          "3": [
            1944,
            1980
          ],
          "4": [
            2028,
            2079
          ]
        },
        "APIConsumer.stringToBytes32": {
          "5": [
            2510,
            2520
          ]
        }
      },
      "3": {
        "Chainlink.add": {
          "7": [
            2090,
            2117
          ],
          "8": [
            2123,
            2152
          ]
        },
        "Chainlink.addInt": {
          "9": [
            2839,
            2866
          ],
          "10": [
            2872,
            2898
          ]
        },
        "Chainlink.initialize": {
          "17": [
            1179,
            1228
          ],
          "18": [
            1234,
            1247
          ],
          "19": [
            1253,
            1292
          ],
          "20": [
            1298,
            1341
          ]
        }
      },
      "4": {
        "ChainlinkClient.buildChainlinkRequest": {
          "6": [
            1981,
            2057
          ]
        },
        "ChainlinkClient.encodeRequest": {
          "27": [
            7674,
            8086
          ]
        },
        "ChainlinkClient.sendChainlinkRequestTo": {
          "11": [
            3223,
            3282
          ],
          "12": [
            3288,
            3313
          ],
          "13": [
            3319,
            3355
          ],
          "14": [
            3361,
            3395
          ],
          "15": [
            3401,
            3509
          ],
          "16": [
            3515,
            3532
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/BufferChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/CBORChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/Chainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/ChainlinkClient",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/ChainlinkRequestInterface",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/ENSInterface",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/ENSResolver",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/LinkTokenInterface",
    "smartcontractkit/chainlink-brownie-contracts@1.0.2/PointerInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac14610076578063c618a1e414610090578063cfb5192814610098575b600080fd5b6100746004803603604081101561006757600080fd5b508035906020013561013e565b005b61007e6101df565b60408051918252519081900360200190f35b61007e6102fa565b61007e600480360360208110156100ae57600080fd5b8101906020810181356401000000008111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111640100000000831117156100fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610300945050505050565b60008281526005602052604090205482906001600160a01b031633146101955760405162461bcd60e51b8152600401808060200182810382526028815260200180610b126028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a25060065550565b60006101e9610a9f565b6008546101fe90306321abc2af60e11b610322565b90506102406040518060400160405280600381526020016219d95d60ea1b815250604051806080016040528060498152602001610b3a60499139839190610347565b6102a6604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601881526020017f5241572e4554482e5553442e564f4c554d453234484f55520000000000000000815250836103479092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152670de0b6b3a7640000906102d89083908361036a565b6007546009546102f3916001600160a01b0316908490610388565b9250505090565b60065481565b8051600090829061031557506000905061031d565b505060208101515b919050565b61032a610a9f565b610332610a9f565b61033e81868686610556565b95945050505050565b60808301516103569083610593565b60808301516103659082610593565b505050565b60808301516103799083610593565b608083015161036590826105aa565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080546001600160a01b0319166001600160a01b038816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a26002546001600160a01b0316634000aea0858461043087610609565b6040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610491578181015183820152602001610479565b50505050905090810190601f1680156104be5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156104df57600080fd5b505af11580156104f3573d6000803e3d6000fd5b505050506040513d602081101561050957600080fd5b50516105465760405162461bcd60e51b8152600401808060200182810382526023815260200180610aef6023913960400191505060405180910390fd5b6004805460010190559392505050565b61055e610a9f565b61056e856080015161010061072d565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6105a0826003835161076d565b6103658282610847565b67ffffffffffffffff198112156105ca576105c58282610868565b610605565b67ffffffffffffffff8113156105e4576105c582826108a1565b600081126105f8576105c58260008361076d565b610605826001831961076d565b5050565b6060634042994660e01b6000808460000151856020015186604001518760600151600189608001516000015160405160240180896001600160a01b03168152602001888152602001878152602001866001600160a01b03168152602001856001600160e01b031916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106bb5781810151838201526020016106a3565b50505050905090810190601f1680156106e85780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909d169c909c17909b5250989950505050505050505050919050565b610735610ad4565b602082061561074a5760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b6017811161078e576107888360e0600585901b1683176108d6565b50610365565b60ff81116107b8576107ab836018611fe0600586901b16176108d6565b50610788838260016108ee565b61ffff81116107e3576107d6836019611fe0600586901b16176108d6565b50610788838260026108ee565b63ffffffff81116108105761080383601a611fe0600586901b16176108d6565b50610788838260046108ee565b67ffffffffffffffff81116103655761083483601b611fe0600586901b16176108d6565b50610841838260086108ee565b50505050565b61084f610ad4565b6108618384600001515184855161090f565b9392505050565b6108738260c36108d6565b50610605828260001903604051602001808281526020019150506040516020818303038152906040526109bb565b6108ac8260c26108d6565b506106058282604051602001808281526020019150506040516020818303038152906040526109bb565b6108de610ad4565b61086183846000015151846109c8565b6108f6610ad4565b610907848560000151518585610a13565b949350505050565b610917610ad4565b825182111561092557600080fd5b8460200151828501111561094f5761094f856109478760200151878601610a71565b600202610a88565b60008086518051876020830101935080888701111561096e5787860182525b505050602084015b602084106109955780518252601f199093019260209182019101610976565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6105a0826002835161076d565b6109d0610ad4565b836020015183106109ec576109ec848560200151600202610a88565b835180516020858301018481535080851415610a09576001810182525b5093949350505050565b610a1b610ad4565b84602001518483011115610a3857610a3885858401600202610a88565b60006001836101000a039050855183868201018583198251161781525080518487011115610a665783860181525b509495945050505050565b600081831115610a82575081610767565b50919050565b8151610a94838361072d565b506108418382610847565b6040805160a081018252600080825260208201819052918101829052606081019190915260808101610acf610ad4565b905290565b60405180604001604052806060815260200160008152509056fe756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c65536f75726365206d75737420626520746865206f7261636c65206f6620746865207265717565737468747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a26469706673582212200e56e22abf3ecb0ba34bf842f04a903056bd0bc8a8bb6ab9b26b37f18444ea6b64736f6c634300060c0033",
  "deployedSourceMap": "118:2496:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2164:137;;;;;;;;;;;;;;;;-1:-1:-1;2164:137:17;;;;;;;:::i;:::-;;1123:963;;;:::i;:::-;;;;;;;;;;;;;;;;167:21;;;:::i;2307:305::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2307:305:17;;-1:-1:-1;2307:305:17;;-1:-1:-1;;;;;2307:305:17:i;2164:137::-;8743:27:4;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;8743:27:4;8729:10;:41;8721:106;;;;-1:-1:-1;;;8721:106:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8840:27;;;;:15;:27;;;;;;8833:34;;-1:-1:-1;;;;;;8833:34:4;;;8878:30;8856:10;;8878:30;;;-1:-1:-1;2278:6:17::1;:16:::0;-1:-1:-1;2164:137:17:o;1123:963::-;1168:17;1202:32;;:::i;:::-;1259:5;;1237:66;;1274:4;-1:-1:-1;;;1237:21:17;:66::i;:::-;1202:101;;1375:95;;;;;;;;;;;;;;-1:-1:-1;;;1375:95:17;;;;;;;;;;;;;;;;;;;;:7;;:95;:11;:95::i;:::-;1771:47;;;;;;;;;;;;;;-1:-1:-1;;;1771:47:17;;;;;;;;;;;;;;;;;;;;:7;:11;;:47;;;;;:::i;:::-;1944:36;;;;;;;;;;;;-1:-1:-1;;;1944:36:17;;;;1928:6;;1944:36;;:7;;1928:6;1944:14;:36::i;:::-;2058:6;;2075:3;;2035:44;;-1:-1:-1;;;;;2058:6:17;;2066:7;;2035:22;:44::i;:::-;2028:51;;;;1123:963;:::o;167:21::-;;;;:::o;2307:305::-;2463:26;;2375:14;;2442:6;;2459:72;;-1:-1:-1;2517:3:17;;-1:-1:-1;2510:10:17;;2459:72;-1:-1:-1;;2592:2:17;2580:15;;2574:22;2550:56;;;;:::o;1767:295:4:-;1915:24;;:::i;:::-;1947:28;;:::i;:::-;1988:69;:3;2003:7;2012:16;2030:26;1988:14;:69::i;:::-;1981:76;1767:295;-1:-1:-1;;;;;1767:295:4:o;1988:169:3:-;2090:8;;;;:27;;2112:4;2090:21;:27::i;:::-;2123:8;;;;:29;;2145:6;2123:21;:29::i;:::-;1988:169;;;:::o;2741:162::-;2839:8;;;;:27;;2861:4;2839:21;:27::i;:::-;2872:8;;;;:26;;2891:6;2872:18;:26::i;3072:488:4:-;3268:12;;3245:36;;;3262:4;3245:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:47;;;;;;;;;3288:10;;;:25;;;;-1:-1:-1;3319:26:4;;;:15;:26;;;;;;:36;;-1:-1:-1;;;;;;3319:36:4;-1:-1:-1;;;;;3319:36:4;;;;;3366:29;;3235:47;;3366:29;;;3409:4;;-1:-1:-1;;;;;3409:4:4;:20;3430:7;3439:8;3449:19;3463:4;3449:13;:19::i;:::-;3409:60;;;;;;;;;;;;;-1:-1:-1;;;;;3409:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3409:60:4;3401:108;;;;-1:-1:-1;;;3401:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:12;:17;;3531:1;3515:17;;;3072:488;;;;;:::o;998:365:3:-;1147:24;;:::i;:::-;1179:49;1200:4;:8;;;365:3;1179:20;:49::i;:::-;-1:-1:-1;;1234:13:3;;;-1:-1:-1;;;;;1253:39:3;:20;;;:39;-1:-1:-1;;;;;;1298:43:3;:23;;;:43;1234:13;998:365::o;2841:198:14:-;2943:55;2954:3;404:1;2984:5;2978:19;2943:10;:55::i;:::-;3008:24;:3;3025:5;3008:10;:24::i;1750:448::-;-1:-1:-1;;1842:5:14;:28;1839:353;;;1886:30;1905:3;1910:5;1886:18;:30::i;:::-;1839:353;;;1944:18;1936:5;:26;1933:259;;;1978:24;1991:3;1996:5;1978:12;:24::i;1933:259::-;2031:1;2022:5;:10;2019:173;;2048:44;2059:3;249:1;2085:5;2048:10;:44::i;2019:173::-;2123:58;2134:3;305:1;2169:10;;2123;:58::i;:::-;1750:448;;:::o;7564:527:4:-;7652:12;7711:29;;;719:1;663;7961:4;:7;;;7976:4;:20;;;8004:4;:23;;;8035:4;:10;;;765:1;8073:4;:8;;;:12;;;7681:405;;;;;;-1:-1:-1;;;;;7681:405:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7681:405:4;;;;;;-1:-1:-1;;;;;7681:405:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7681:405:4;;;-1:-1:-1;;7681:405:4;;;;;;;;;;;;;;-1:-1:-1;;;;;7681:405:4;-1:-1:-1;;;;;;7681:405:4;;;;;;;;;;-1:-1:-1;7681:405:4;;-1:-1:-1;;;;;;;;;;7564:527:4;;;:::o;982:395:13:-;1052:13;;:::i;:::-;1088:2;1077:8;:13;:18;1073:71;;1134:2;1123:8;:13;1117:2;:20;1105:32;;;;1073:71;-1:-1:-1;1191:12:13;;;;:23;;;1254:4;1248:11;;1266:16;;;-1:-1:-1;1289:14:13;;1331:18;;1323:27;;;1310:41;;1191:3;982:395;;;;;:::o;717:724:14:-;832:2;823:5;:11;820:615;;850:44;:3;872:20;882:1;873:10;;;872:20;;;850:15;:44::i;:::-;;820:615;;;923:4;914:5;:13;911:524;;943:41;:3;980:2;966:10;975:1;966:10;;;;965:17;943:15;:41::i;:::-;-1:-1:-1;998:23:14;:3;1012:5;1019:1;998:13;:23::i;911:524::-;1050:6;1041:5;:15;1038:397;;1072:41;:3;1109:2;1095:10;1104:1;1095:10;;;;1094:17;1072:15;:41::i;:::-;-1:-1:-1;1127:23:14;:3;1141:5;1148:1;1127:13;:23::i;1038:397::-;1179:10;1170:5;:19;1167:268;;1205:41;:3;1242:2;1228:10;1237:1;1228:10;;;;1227:17;1205:15;:41::i;:::-;-1:-1:-1;1260:23:14;:3;1274:5;1281:1;1260:13;:23::i;1167:268::-;1312:18;1303:5;:27;1300:135;;1346:41;:3;1383:2;1369:10;1378:1;1369:10;;;;1368:17;1346:15;:41::i;:::-;-1:-1:-1;1401:23:14;:3;1415:5;1422:1;1401:13;:23::i;:::-;;717:724;;;:::o;4536:155:13:-;4613:13;;:::i;:::-;4641:45;4647:3;4652;:7;;;:14;4668:4;4674;:11;4641:5;:45::i;:::-;4634:52;4536:155;-1:-1:-1;;;4536:155:13:o;2606:229:14:-;2702:72;:3;2724:48;2702:15;:72::i;:::-;;2782:46;2794:3;2820:5;-1:-1:-1;;2815:10:14;2799:28;;;;;;;;;;;;;;;;;;;;;;;;;2782:11;:46::i;2391:209::-;2481:63;:3;2503:39;2481:15;:63::i;:::-;;2552:41;2564:3;2585:5;2569:23;;;;;;;;;;;;;;;;;;;;;;;;;2552:11;:41::i;5851:144:13:-;5925:13;;:::i;:::-;5953:37;5964:3;5969;:7;;;:14;5985:4;5953:10;:37::i;9543:154::-;9624:13;;:::i;:::-;9652:40;9661:3;9666;:7;;;:14;9682:4;9688:3;9652:8;:40::i;:::-;9645:47;9543:154;-1:-1:-1;;;;9543:154:13:o;2691:1140::-;2786:13;;:::i;:::-;2822:4;:11;2815:3;:18;;2807:27;;;;;;2857:3;:12;;;2851:3;2845;:9;:24;2841:90;;;2879:45;2886:3;2891:28;2895:3;:12;;;2915:3;2909;:9;2891:3;:28::i;:::-;2922:1;2891:32;2879:6;:45::i;:::-;2937:9;2952:8;3046:3;3040:10;3117:6;3111:13;3233:3;3228:2;3220:6;3216:15;3212:25;3204:33;;3317:6;3311:3;3306;3302:13;3299:25;3296:2;;;3359:3;3354;3350:13;3342:6;3335:29;3296:2;-1:-1:-1;;;3396:2:13;3386:13;;3457:129;3471:2;3464:3;:9;3457:129;;3526:10;;3513:24;;-1:-1:-1;;3475:9:13;;;;3560:2;3552:10;;;;3570:9;3457:129;;;3695:10;3744:11;;-1:-1:-1;;3640:2:13;:8;;;3632:3;:17;:21;3740:22;;;3707:9;;3691:26;;;;3782:21;3769:35;;-1:-1:-1;3823:3:13;2691:1140;;;;;;:::o;2204:181:14:-;2304:47;2315:3;354:1;2338:5;:12;2304:10;:47::i;4985:619:13:-;5068:13;;:::i;:::-;5100:3;:12;;;5093:3;:19;5089:69;;5122:29;5129:3;5134;:12;;;5149:1;5134:16;5122:6;:29::i;:::-;5244:3;5238:10;5315:6;5309:13;5427:2;5421:3;5413:6;5409:16;5405:25;5451:4;5445;5437:19;;5522:6;5517:3;5514:15;5511:2;;;5567:1;5559:6;5555:14;5547:6;5540:30;5511:2;-1:-1:-1;5596:3:13;;4985:619;-1:-1:-1;;;;4985:619:13:o;8650:642::-;8739:13;;:::i;:::-;8776:3;:12;;;8770:3;8764;:9;:24;8760:73;;;8798:28;8805:3;8817;8811;:9;8824:1;8810:15;8798:6;:28::i;:::-;8839:9;8864:1;8858:3;8851;:10;:14;8839:26;;8951:3;8945:10;9066:3;9060;9052:6;9048:16;9044:26;9122:4;9114;9110:9;9103:4;9097:11;9093:27;9090:37;9084:4;9077:51;;9210:6;9204:13;9198:3;9193;9189:13;9186:32;9183:2;;;9253:3;9248;9244:13;9236:6;9229:29;9183:2;-1:-1:-1;9284:3:13;;8650:642;-1:-1:-1;;;;;8650:642:13:o;1929:114::-;1979:4;1999:1;1995;:5;1991:34;;;-1:-1:-1;2017:1:13;2010:8;;1991:34;-1:-1:-1;2037:1:13;1929:114;-1:-1:-1;1929:114:13:o;1772:153::-;1863:7;;1876:19;1863:3;1886:8;1876:4;:19::i;:::-;;1901;1908:3;1913:6;1901;:19::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "fulfill(bytes32,uint256)": {
        "notice": "Receive the response in the form of uint256"
      },
      "requestVolumeData()": {
        "notice": "Create a Chainlink request to retrieve API response, find the target data, then multiply by 1000000000000000000 (to remove decimal places from data)."
      }
    },
    "version": 1
  },
  "offset": [
    118,
    2614
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4357855E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6021ABAC EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC618A1E4 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xCFB51928 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x300 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB12 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 POP PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1FE SWAP1 ADDRESS PUSH4 0x21ABC2AF PUSH1 0xE1 SHL PUSH2 0x322 JUMP JUMPDEST SWAP1 POP PUSH2 0x240 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19D95D PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x49 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3A PUSH1 0x49 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xE0C2E8D PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5241572E4554482E5553442E564F4C554D453234484F55520000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x347 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x74696D6573 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2D8 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x2F3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 PUSH2 0x388 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0x315 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH2 0x31D JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 ADD MLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32A PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x332 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x33E DUP2 DUP7 DUP7 DUP7 PUSH2 0x556 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x356 SWAP1 DUP4 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x365 SWAP1 DUP3 PUSH2 0x593 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x379 SWAP1 DUP4 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x365 SWAP1 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP5 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP4 ADD DUP5 MSTORE DUP3 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 LOG2 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 DUP6 DUP5 PUSH2 0x430 DUP8 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x491 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x479 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4BE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAEF PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x55E PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x56E DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x72D JUMP JUMPDEST POP POP SWAP2 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x5A0 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x365 DUP3 DUP3 PUSH2 0x847 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 SLT ISZERO PUSH2 0x5CA JUMPI PUSH2 0x5C5 DUP3 DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5C5 DUP3 DUP3 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x5F8 JUMPI PUSH2 0x5C5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x605 DUP3 PUSH1 0x1 DUP4 NOT PUSH2 0x76D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP10 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP14 AND SWAP13 SWAP1 SWAP13 OR SWAP1 SWAP12 MSTORE POP SWAP9 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x74A JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0x78E JUMPI PUSH2 0x788 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x365 JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x7B8 JUMPI PUSH2 0x7AB DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x788 DUP4 DUP3 PUSH1 0x1 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x7E3 JUMPI PUSH2 0x7D6 DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x788 DUP4 DUP3 PUSH1 0x2 PUSH2 0x8EE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x810 JUMPI PUSH2 0x803 DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x788 DUP4 DUP3 PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x365 JUMPI PUSH2 0x834 DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x841 DUP4 DUP3 PUSH1 0x8 PUSH2 0x8EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x84F PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x861 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x90F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x873 DUP3 PUSH1 0xC3 PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x605 DUP3 DUP3 PUSH1 0x0 NOT SUB PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x8AC DUP3 PUSH1 0xC2 PUSH2 0x8D6 JUMP JUMPDEST POP PUSH2 0x605 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x8DE PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x861 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x907 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0xA13 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x917 PUSH2 0xAD4 JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 ADD GT ISZERO PUSH2 0x94F JUMPI PUSH2 0x94F DUP6 PUSH2 0x947 DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x96E JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x995 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x976 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5A0 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x9D0 PUSH2 0xAD4 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0x9EC JUMPI PUSH2 0x9EC DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 MUL PUSH2 0xA88 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 EQ ISZERO PUSH2 0xA09 JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xAD4 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 ADD GT ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA38 DUP6 DUP6 DUP5 ADD PUSH1 0x2 MUL PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0xA66 JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xA82 JUMPI POP DUP2 PUSH2 0x767 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0xA94 DUP4 DUP4 PUSH2 0x72D JUMP JUMPDEST POP PUSH2 0x841 DUP4 DUP3 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0xACF PUSH2 0xAD4 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH22 0x6E61626C6520746F207472616E73666572416E644361 PUSH13 0x6C20746F206F7261636C65536F PUSH22 0x726365206D75737420626520746865206F7261636C65 KECCAK256 PUSH16 0x66207468652072657175657374687474 PUSH17 0x733A2F2F6D696E2D6170692E6372797074 PUSH16 0x636F6D706172652E636F6D2F64617461 0x2F PUSH17 0x726963656D756C746966756C6C3F667379 PUSH14 0x733D455448267473796D733D5553 DIFFICULTY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE JUMP 0xE2 0x2A 0xBF RETURNDATACOPY 0xCB SIGNEXTEND LOG3 0x4B 0xF8 TIMESTAMP CREATE 0x4A SWAP1 ADDRESS JUMP 0xBD SIGNEXTEND 0xC8 0xA8 0xBB PUSH11 0xB9B26B37F18444EA6B6473 PUSH16 0x6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x4357855E"
    },
    "38": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "EQ",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x6021ABAC"
    },
    "49": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "EQ",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xC618A1E4"
    },
    "60": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x90"
    },
    "64": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xCFB51928"
    },
    "71": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x98"
    },
    "75": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "DUP1",
      "path": "17"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        118,
        2614
      ],
      "op": "REVERT",
      "path": "17"
    },
    "81": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "82": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x74"
    },
    "85": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "87": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "89": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "SUB",
      "path": "17"
    },
    "90": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "92": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "DUP2",
      "path": "17"
    },
    "93": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "LT",
      "path": "17"
    },
    "94": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "95": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x67"
    },
    "98": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "99": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "101": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "DUP1",
      "path": "17"
    },
    "102": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "REVERT",
      "path": "17"
    },
    "103": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "DUP1",
      "path": "17"
    },
    "106": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "107": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "108": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "110": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "ADD",
      "path": "17"
    },
    "111": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "112": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E"
    },
    "115": {
      "fn": "APIConsumer.fulfill",
      "jump": "i",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMP",
      "path": "17"
    },
    "116": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "117": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "STOP",
      "path": "17"
    },
    "118": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "119": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7E"
    },
    "122": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DF"
    },
    "125": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1123,
        2086
      ],
      "op": "JUMP",
      "path": "17"
    },
    "126": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "127": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "129": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "DUP1",
      "path": "17"
    },
    "130": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "131": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "132": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "DUP3",
      "path": "17"
    },
    "133": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "134": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "135": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "136": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "DUP2",
      "path": "17"
    },
    "137": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "138": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SUB",
      "path": "17"
    },
    "139": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "141": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "ADD",
      "path": "17"
    },
    "142": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "143": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "RETURN",
      "path": "17"
    },
    "144": {
      "offset": [
        167,
        188
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "145": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        167,
        188
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7E"
    },
    "148": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        167,
        188
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2FA"
    },
    "151": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        167,
        188
      ],
      "op": "JUMP",
      "path": "17"
    },
    "152": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "153": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7E"
    },
    "156": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "158": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "159": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "160": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SUB",
      "path": "17"
    },
    "161": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "163": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "164": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "LT",
      "path": "17"
    },
    "165": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "166": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAE"
    },
    "169": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "170": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "172": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "173": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "REVERT",
      "path": "17"
    },
    "174": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "175": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "176": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "177": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "178": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "180": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "181": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "182": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "183": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "184": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0x100000000"
    },
    "190": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "191": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "GT",
      "path": "17"
    },
    "192": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "193": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC9"
    },
    "196": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "197": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "199": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "200": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "REVERT",
      "path": "17"
    },
    "201": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "202": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP3",
      "path": "17"
    },
    "203": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "204": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP4",
      "path": "17"
    },
    "205": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "207": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP3",
      "path": "17"
    },
    "208": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "209": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "GT",
      "path": "17"
    },
    "210": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "211": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDB"
    },
    "214": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "215": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "217": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "218": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "REVERT",
      "path": "17"
    },
    "219": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "220": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "221": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "222": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "223": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "225": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "226": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "227": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP5",
      "path": "17"
    },
    "228": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "230": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP4",
      "path": "17"
    },
    "231": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MUL",
      "path": "17"
    },
    "232": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP5",
      "path": "17"
    },
    "233": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "234": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "GT",
      "path": "17"
    },
    "235": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH5",
      "path": "17",
      "value": "0x100000000"
    },
    "241": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP4",
      "path": "17"
    },
    "242": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "GT",
      "path": "17"
    },
    "243": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "OR",
      "path": "17"
    },
    "244": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "245": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFD"
    },
    "248": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "249": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "251": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "252": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "REVERT",
      "path": "17"
    },
    "253": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "254": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "255": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "256": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "257": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "258": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "260": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "261": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "263": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "264": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "265": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DIV",
      "path": "17"
    },
    "266": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MUL",
      "path": "17"
    },
    "267": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "269": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "270": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "272": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "273": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "274": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "275": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "276": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "278": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "279": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "280": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "281": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "282": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "283": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "284": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "285": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP2",
      "path": "17"
    },
    "286": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "287": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "289": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "290": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP4",
      "path": "17"
    },
    "291": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP4",
      "path": "17"
    },
    "292": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP1",
      "path": "17"
    },
    "293": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP3",
      "path": "17"
    },
    "294": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "DUP5",
      "path": "17"
    },
    "295": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "CALLDATACOPY",
      "path": "17"
    },
    "296": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "298": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "299": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "ADD",
      "path": "17"
    },
    "300": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "301": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "302": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "303": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "304": {
      "op": "POP"
    },
    "305": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "306": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x300"
    },
    "311": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "312": {
      "op": "POP"
    },
    "313": {
      "op": "POP"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "op": "POP"
    },
    "316": {
      "op": "POP"
    },
    "317": {
      "fn": "APIConsumer.stringToBytes32",
      "jump": "i",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMP",
      "path": "17"
    },
    "318": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "319": {
      "offset": [
        8743,
        8770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "321": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "DUP3",
      "path": "4"
    },
    "322": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "323": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "324": {
      "offset": [
        8743,
        8758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "326": {
      "offset": [
        8743,
        8770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "328": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "329": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "331": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "332": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "333": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "334": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "DUP3",
      "path": "4"
    },
    "335": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8743,
        8770
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "342": {
      "op": "SHL"
    },
    "343": {
      "op": "SUB"
    },
    "344": {
      "offset": [
        8743,
        8770
      ],
      "op": "AND",
      "path": "4"
    },
    "345": {
      "offset": [
        8729,
        8739
      ],
      "op": "CALLER",
      "path": "4"
    },
    "346": {
      "offset": [
        8729,
        8770
      ],
      "op": "EQ",
      "path": "4"
    },
    "347": {
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x195"
    },
    "350": {
      "offset": [
        8721,
        8827
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "351": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "353": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "offset": [
        8721,
        8827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "362": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "363": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "365": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "ADD",
      "path": "4"
    },
    "366": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP1",
      "path": "4"
    },
    "367": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP1",
      "path": "4"
    },
    "368": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "370": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "ADD",
      "path": "4"
    },
    "371": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP3",
      "path": "4"
    },
    "372": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "373": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SUB",
      "path": "4"
    },
    "374": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP3",
      "path": "4"
    },
    "375": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "376": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "378": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "379": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "380": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "382": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "ADD",
      "path": "4"
    },
    "383": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP1",
      "path": "4"
    },
    "384": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB12"
    },
    "387": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "389": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "390": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "391": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "393": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "ADD",
      "path": "4"
    },
    "394": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "395": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "POP",
      "path": "4"
    },
    "396": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "POP",
      "path": "4"
    },
    "397": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "399": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "400": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "DUP1",
      "path": "4"
    },
    "401": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "402": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SUB",
      "path": "4"
    },
    "403": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "404": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "REVERT",
      "path": "4"
    },
    "405": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8721,
        8827
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "406": {
      "offset": [
        8840,
        8867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "408": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "409": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "410": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "411": {
      "offset": [
        8840,
        8855
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "413": {
      "offset": [
        8840,
        8867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "415": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "416": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "418": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "DUP1",
      "path": "4"
    },
    "419": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "DUP3",
      "path": "4"
    },
    "420": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8840,
        8867
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "421": {
      "offset": [
        8833,
        8867
      ],
      "op": "DUP1",
      "path": "4"
    },
    "422": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8833,
        8867
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "op": "SUB"
    },
    "431": {
      "op": "NOT"
    },
    "432": {
      "offset": [
        8833,
        8867
      ],
      "op": "AND",
      "path": "4"
    },
    "433": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8833,
        8867
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "434": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8833,
        8867
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "435": {
      "offset": [
        8878,
        8908
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "436": {
      "offset": [
        8856,
        8866
      ],
      "op": "DUP3",
      "path": "4"
    },
    "437": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8856,
        8866
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "438": {
      "offset": [
        8878,
        8908
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A"
    },
    "471": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8878,
        8908
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "472": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        8878,
        8908
      ],
      "op": "LOG2",
      "path": "4"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2278,
        2284
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 0,
      "value": "0x6"
    },
    "476": {
      "fn": "APIConsumer.fulfill",
      "offset": [
        2278,
        2294
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "fn": "APIConsumer.fulfill",
      "jump": "o",
      "offset": [
        2164,
        2301
      ],
      "op": "JUMP",
      "path": "17"
    },
    "479": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "480": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1168,
        1185
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "482": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1202,
        1234
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E9"
    },
    "485": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1202,
        1234
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9F"
    },
    "488": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1202,
        1234
      ],
      "op": "JUMP",
      "path": "17"
    },
    "489": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1202,
        1234
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "490": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1259,
        1264
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "492": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1259,
        1264
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "493": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1237,
        1303
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1FE"
    },
    "496": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1237,
        1303
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "497": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1274,
        1278
      ],
      "op": "ADDRESS",
      "path": "17"
    },
    "498": {
      "op": "PUSH4",
      "value": "0x21ABC2AF"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1237,
        1258
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x322"
    },
    "509": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1237,
        1303
      ],
      "op": "JUMP",
      "path": "17"
    },
    "510": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1237,
        1303
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "511": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1202,
        1303
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "512": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1202,
        1303
      ],
      "op": "POP",
      "path": "17"
    },
    "513": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 1,
      "value": "0x240"
    },
    "516": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "518": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "519": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP1",
      "path": "17"
    },
    "520": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "522": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "ADD",
      "path": "17"
    },
    "523": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "525": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "526": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP1",
      "path": "17"
    },
    "527": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "529": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP2",
      "path": "17"
    },
    "530": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "531": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "533": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "ADD",
      "path": "17"
    },
    "534": {
      "op": "PUSH3",
      "value": "0x19D95D"
    },
    "538": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP2",
      "path": "17"
    },
    "542": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "543": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "POP",
      "path": "17"
    },
    "544": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "546": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "547": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP1",
      "path": "17"
    },
    "548": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "550": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "ADD",
      "path": "17"
    },
    "551": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "553": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "554": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP1",
      "path": "17"
    },
    "555": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x49"
    },
    "557": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "DUP2",
      "path": "17"
    },
    "558": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "559": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "561": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "ADD",
      "path": "17"
    },
    "562": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB3A"
    },
    "565": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x49"
    },
    "567": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "568": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "CODECOPY",
      "path": "17"
    },
    "569": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1382
      ],
      "op": "DUP4",
      "path": "17"
    },
    "570": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1382
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "571": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "572": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1386
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x347"
    },
    "575": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1375,
        1470
      ],
      "op": "JUMP",
      "path": "17"
    },
    "576": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1375,
        1470
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "577": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 2,
      "value": "0x2A6"
    },
    "580": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "582": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "583": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP1",
      "path": "17"
    },
    "584": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "586": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "ADD",
      "path": "17"
    },
    "587": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "589": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "590": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP1",
      "path": "17"
    },
    "591": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "593": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP2",
      "path": "17"
    },
    "594": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "595": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "597": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "ADD",
      "path": "17"
    },
    "598": {
      "op": "PUSH4",
      "value": "0xE0C2E8D"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP2",
      "path": "17"
    },
    "607": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "608": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "POP",
      "path": "17"
    },
    "609": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "611": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "612": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP1",
      "path": "17"
    },
    "613": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "615": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "ADD",
      "path": "17"
    },
    "616": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "618": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "619": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP1",
      "path": "17"
    },
    "620": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x18"
    },
    "622": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP2",
      "path": "17"
    },
    "623": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "624": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "626": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "ADD",
      "path": "17"
    },
    "627": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x5241572E4554482E5553442E564F4C554D453234484F55520000000000000000"
    },
    "660": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "DUP2",
      "path": "17"
    },
    "661": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "662": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "POP",
      "path": "17"
    },
    "663": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1778
      ],
      "op": "DUP4",
      "path": "17"
    },
    "664": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1782
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x347"
    },
    "667": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1782
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "668": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "669": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "670": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "671": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "676": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "AND",
      "path": "17"
    },
    "677": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1771,
        1818
      ],
      "op": "JUMP",
      "path": "17"
    },
    "678": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1771,
        1818
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "679": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 3,
      "value": "0x40"
    },
    "681": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "DUP1",
      "path": "17"
    },
    "682": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "683": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "DUP1",
      "path": "17"
    },
    "684": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "DUP3",
      "path": "17"
    },
    "685": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "ADD",
      "path": "17"
    },
    "686": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "687": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "688": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "689": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "691": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "DUP2",
      "path": "17"
    },
    "692": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "693": {
      "op": "PUSH5",
      "value": "0x74696D6573"
    },
    "699": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "701": {
      "op": "SHL"
    },
    "702": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "704": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "DUP3",
      "path": "17"
    },
    "705": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "ADD",
      "path": "17"
    },
    "706": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "707": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1928,
        1934
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xDE0B6B3A7640000"
    },
    "716": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1928,
        1934
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "717": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D8"
    },
    "720": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "721": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1951
      ],
      "op": "DUP4",
      "path": "17"
    },
    "722": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1951
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "723": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1928,
        1934
      ],
      "op": "DUP4",
      "path": "17"
    },
    "724": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1958
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x36A"
    },
    "727": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        1944,
        1980
      ],
      "op": "JUMP",
      "path": "17"
    },
    "728": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1944,
        1980
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "729": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2058,
        2064
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 4,
      "value": "0x7"
    },
    "731": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2058,
        2064
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "732": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2075,
        2078
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x9"
    },
    "734": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2075,
        2078
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "735": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2035,
        2079
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2F3"
    },
    "738": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2035,
        2079
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "745": {
      "op": "SHL"
    },
    "746": {
      "op": "SUB"
    },
    "747": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2058,
        2064
      ],
      "op": "AND",
      "path": "17"
    },
    "748": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2058,
        2064
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "749": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2066,
        2073
      ],
      "op": "DUP5",
      "path": "17"
    },
    "750": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2066,
        2073
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "751": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2035,
        2057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x388"
    },
    "754": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "i",
      "offset": [
        2035,
        2079
      ],
      "op": "JUMP",
      "path": "17"
    },
    "755": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2035,
        2079
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "756": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2028,
        2079
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "757": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2028,
        2079
      ],
      "op": "POP",
      "path": "17"
    },
    "758": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2028,
        2079
      ],
      "op": "POP",
      "path": "17"
    },
    "759": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        2028,
        2079
      ],
      "op": "POP",
      "path": "17"
    },
    "760": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        1123,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "761": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "o",
      "offset": [
        1123,
        2086
      ],
      "op": "JUMP",
      "path": "17"
    },
    "762": {
      "offset": [
        167,
        188
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "763": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        167,
        188
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "765": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        167,
        188
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "766": {
      "fn": "APIConsumer.requestVolumeData",
      "offset": [
        167,
        188
      ],
      "op": "DUP2",
      "path": "17"
    },
    "767": {
      "fn": "APIConsumer.requestVolumeData",
      "jump": "o",
      "offset": [
        167,
        188
      ],
      "op": "JUMP",
      "path": "17"
    },
    "768": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2307,
        2612
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "769": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2463,
        2489
      ],
      "op": "DUP1",
      "path": "17"
    },
    "770": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2463,
        2489
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "771": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2375,
        2389
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "773": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2375,
        2389
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "774": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2442,
        2448
      ],
      "op": "DUP3",
      "path": "17"
    },
    "775": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2442,
        2448
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "776": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2459,
        2531
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x315"
    },
    "779": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2459,
        2531
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2517,
        2520
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x0"
    },
    "783": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2517,
        2520
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2510,
        2520
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x31D"
    },
    "788": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2510,
        2520
      ],
      "op": "JUMP",
      "path": "17"
    },
    "789": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2459,
        2531
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2592,
        2594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "794": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2580,
        2595
      ],
      "op": "DUP2",
      "path": "17"
    },
    "795": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2580,
        2595
      ],
      "op": "ADD",
      "path": "17"
    },
    "796": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2574,
        2596
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "797": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2550,
        2606
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "798": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2550,
        2606
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "799": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2550,
        2606
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "800": {
      "fn": "APIConsumer.stringToBytes32",
      "offset": [
        2550,
        2606
      ],
      "op": "POP",
      "path": "17"
    },
    "801": {
      "fn": "APIConsumer.stringToBytes32",
      "jump": "o",
      "offset": [
        2550,
        2606
      ],
      "op": "JUMP",
      "path": "17"
    },
    "802": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1767,
        2062
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "803": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1915,
        1939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A"
    },
    "806": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1915,
        1939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9F"
    },
    "809": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        1915,
        1939
      ],
      "op": "JUMP",
      "path": "4"
    },
    "810": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1915,
        1939
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "811": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1947,
        1975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "814": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1947,
        1975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9F"
    },
    "817": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        1947,
        1975
      ],
      "op": "JUMP",
      "path": "4"
    },
    "818": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1947,
        1975
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "819": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1988,
        2057
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x33E"
    },
    "822": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1988,
        1991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "823": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2003,
        2010
      ],
      "op": "DUP7",
      "path": "4"
    },
    "824": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2012,
        2028
      ],
      "op": "DUP7",
      "path": "4"
    },
    "825": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2030,
        2056
      ],
      "op": "DUP7",
      "path": "4"
    },
    "826": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1988,
        2002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x556"
    },
    "829": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        1988,
        2057
      ],
      "op": "JUMP",
      "path": "4"
    },
    "830": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1988,
        2057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "831": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1981,
        2057
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "832": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1767,
        2062
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "o",
      "offset": [
        1767,
        2062
      ],
      "op": "JUMP",
      "path": "4"
    },
    "839": {
      "fn": "Chainlink.add",
      "offset": [
        1988,
        2157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "840": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2098
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x80"
    },
    "842": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2098
      ],
      "op": "DUP4",
      "path": "3"
    },
    "843": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2098
      ],
      "op": "ADD",
      "path": "3"
    },
    "844": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2098
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "845": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x356"
    },
    "848": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "849": {
      "fn": "Chainlink.add",
      "offset": [
        2112,
        2116
      ],
      "op": "DUP4",
      "path": "3"
    },
    "850": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x593"
    },
    "853": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2090,
        2117
      ],
      "op": "JUMP",
      "path": "3"
    },
    "854": {
      "fn": "Chainlink.add",
      "offset": [
        2090,
        2117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "855": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2131
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x80"
    },
    "857": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2131
      ],
      "op": "DUP4",
      "path": "3"
    },
    "858": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2131
      ],
      "op": "ADD",
      "path": "3"
    },
    "859": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2131
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "860": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x365"
    },
    "863": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "864": {
      "fn": "Chainlink.add",
      "offset": [
        2145,
        2151
      ],
      "op": "DUP3",
      "path": "3"
    },
    "865": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x593"
    },
    "868": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2123,
        2152
      ],
      "op": "JUMP",
      "path": "3"
    },
    "869": {
      "fn": "Chainlink.add",
      "offset": [
        2123,
        2152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "870": {
      "fn": "Chainlink.add",
      "offset": [
        1988,
        2157
      ],
      "op": "POP",
      "path": "3"
    },
    "871": {
      "fn": "Chainlink.add",
      "offset": [
        1988,
        2157
      ],
      "op": "POP",
      "path": "3"
    },
    "872": {
      "fn": "Chainlink.add",
      "offset": [
        1988,
        2157
      ],
      "op": "POP",
      "path": "3"
    },
    "873": {
      "fn": "Chainlink.add",
      "jump": "o",
      "offset": [
        1988,
        2157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "874": {
      "fn": "Chainlink.addInt",
      "offset": [
        2741,
        2903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "875": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2847
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x80"
    },
    "877": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2847
      ],
      "op": "DUP4",
      "path": "3"
    },
    "878": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2847
      ],
      "op": "ADD",
      "path": "3"
    },
    "879": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2847
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "880": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x379"
    },
    "883": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "884": {
      "fn": "Chainlink.addInt",
      "offset": [
        2861,
        2865
      ],
      "op": "DUP4",
      "path": "3"
    },
    "885": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x593"
    },
    "888": {
      "fn": "Chainlink.addInt",
      "jump": "i",
      "offset": [
        2839,
        2866
      ],
      "op": "JUMP",
      "path": "3"
    },
    "889": {
      "fn": "Chainlink.addInt",
      "offset": [
        2839,
        2866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "890": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x80"
    },
    "892": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "893": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2880
      ],
      "op": "ADD",
      "path": "3"
    },
    "894": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "895": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2898
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x365"
    },
    "898": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2898
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "899": {
      "fn": "Chainlink.addInt",
      "offset": [
        2891,
        2897
      ],
      "op": "DUP3",
      "path": "3"
    },
    "900": {
      "fn": "Chainlink.addInt",
      "offset": [
        2872,
        2890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AA"
    },
    "903": {
      "fn": "Chainlink.addInt",
      "jump": "i",
      "offset": [
        2872,
        2898
      ],
      "op": "JUMP",
      "path": "3"
    },
    "904": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "905": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3268,
        3280
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x4"
    },
    "907": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3268,
        3280
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "908": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "910": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP1",
      "path": "4"
    },
    "911": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "912": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3262,
        3266
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "913": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "915": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "916": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "917": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SHL",
      "path": "4"
    },
    "918": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "920": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP1",
      "path": "4"
    },
    "921": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP5",
      "path": "4"
    },
    "922": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "ADD",
      "path": "4"
    },
    "923": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "924": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "925": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "926": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "927": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "929": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP1",
      "path": "4"
    },
    "930": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP5",
      "path": "4"
    },
    "931": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "ADD",
      "path": "4"
    },
    "932": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP7",
      "path": "4"
    },
    "933": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "934": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "935": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP5",
      "path": "4"
    },
    "936": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "937": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP1",
      "path": "4"
    },
    "938": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP6",
      "path": "4"
    },
    "939": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SUB",
      "path": "4"
    },
    "940": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "941": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "942": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "ADD",
      "path": "4"
    },
    "943": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP2",
      "path": "4"
    },
    "944": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "945": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x54"
    },
    "947": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "948": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "949": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "ADD",
      "path": "4"
    },
    "950": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "DUP5",
      "path": "4"
    },
    "951": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3245,
        3281
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "952": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "DUP3",
      "path": "4"
    },
    "953": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "954": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "955": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "DUP2",
      "path": "4"
    },
    "956": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "ADD",
      "path": "4"
    },
    "957": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "958": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "959": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "960": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "961": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3298
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 12
    },
    "962": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3298
      ],
      "op": "DUP7",
      "path": "4"
    },
    "963": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3298
      ],
      "op": "ADD",
      "path": "4"
    },
    "964": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3313
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "965": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3313
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "966": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3313
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "967": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3288,
        3313
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "970": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 13
    },
    "971": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "DUP2",
      "path": "4"
    },
    "972": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "973": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3334
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "975": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "976": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "977": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "978": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "DUP2",
      "path": "4"
    },
    "979": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "DUP2",
      "path": "4"
    },
    "980": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3345
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "981": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "DUP1",
      "path": "4"
    },
    "982": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "op": "NOT"
    },
    "992": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "AND",
      "path": "4"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1002": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "AND",
      "path": "4"
    },
    "1003": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "OR",
      "path": "4"
    },
    "1004": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1005": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3319,
        3355
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1006": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3366,
        3395
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 14
    },
    "1007": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3366,
        3395
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1008": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1009": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3235,
        3282
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1010": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3366,
        3395
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9"
    },
    "1043": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3366,
        3395
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1044": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3366,
        3395
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1045": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3413
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x2"
    },
    "1047": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3413
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3413
      ],
      "op": "AND",
      "path": "4"
    },
    "1057": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3429
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4000AEA0"
    },
    "1062": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3430,
        3437
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1063": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3439,
        3447
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1064": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3449,
        3468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x430"
    },
    "1067": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3463,
        3467
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1068": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3449,
        3462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x609"
    },
    "1071": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        3449,
        3468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1072": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3449,
        3468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1073": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1075": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1076": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1077": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1082": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "AND",
      "path": "4"
    },
    "1083": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1085": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SHL",
      "path": "4"
    },
    "1086": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1087": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1088": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1090": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1091": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1092": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "op": "SUB"
    },
    "1101": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "AND",
      "path": "4"
    },
    "1102": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1103": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1104": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1106": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1107": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1108": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1109": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1110": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1112": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1113": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1114": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1116": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1117": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1118": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1119": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1120": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1121": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1122": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1123": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1124": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1125": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1126": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1127": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1128": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1130": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1131": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1132": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1133": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1134": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1135": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1136": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1138": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1139": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1140": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1141": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1142": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1143": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1145": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1146": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1147": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1148": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "LT",
      "path": "4"
    },
    "1149": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1150": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x491"
    },
    "1153": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1154": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1155": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1156": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1157": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1158": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1159": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1160": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1161": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1162": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1164": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1165": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x479"
    },
    "1168": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1169": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1170": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1171": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1172": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1173": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1174": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1175": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1176": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1177": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1178": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1179": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1180": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1182": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "AND",
      "path": "4"
    },
    "1183": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1184": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1185": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BE"
    },
    "1188": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1189": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1190": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1191": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1192": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1193": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1194": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1196": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1197": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1199": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1200": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1203": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "EXP",
      "path": "4"
    },
    "1204": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1205": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "NOT",
      "path": "4"
    },
    "1206": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "AND",
      "path": "4"
    },
    "1207": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1208": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1209": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1211": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1212": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1213": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1214": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1215": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1216": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1217": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1218": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1219": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1220": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1221": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1222": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1224": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1226": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1227": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1228": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1229": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1230": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1231": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1233": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1234": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1235": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1236": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1237": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1238": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1239": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DF"
    },
    "1242": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1243": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1245": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1246": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1247": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1248": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1249": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "GAS",
      "path": "4"
    },
    "1250": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "CALL",
      "path": "4"
    },
    "1251": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1252": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1253": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1254": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F3"
    },
    "1257": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1258": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1259": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1261": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1262": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1263": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1264": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1266": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1267": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1268": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1269": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1270": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1271": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "POP",
      "path": "4"
    },
    "1272": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1274": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1275": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1276": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1278": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1279": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "LT",
      "path": "4"
    },
    "1280": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1281": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x509"
    },
    "1284": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1285": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1287": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1288": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1289": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "branch": 75,
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3409,
        3469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1292": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x546"
    },
    "1295": {
      "branch": 75,
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1296": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1298": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1307": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1308": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1310": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "ADD",
      "path": "4"
    },
    "1311": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1312": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1313": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1315": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "ADD",
      "path": "4"
    },
    "1316": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1317": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1318": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SUB",
      "path": "4"
    },
    "1319": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1320": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1321": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x23"
    },
    "1323": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1324": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1325": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1327": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "ADD",
      "path": "4"
    },
    "1328": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1329": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAEF"
    },
    "1332": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x23"
    },
    "1334": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1335": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1336": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1338": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "ADD",
      "path": "4"
    },
    "1339": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1340": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "POP",
      "path": "4"
    },
    "1341": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "POP",
      "path": "4"
    },
    "1342": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1344": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1345": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1346": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1347": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SUB",
      "path": "4"
    },
    "1348": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1349": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1350": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3401,
        3509
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1351": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3527
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x4"
    },
    "1353": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3532
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1354": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3532
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1355": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3531,
        3532
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1357": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3532
      ],
      "op": "ADD",
      "path": "4"
    },
    "1358": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3532
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1359": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3515,
        3532
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1360": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1361": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1362": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "POP",
      "path": "4"
    },
    "1363": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "POP",
      "path": "4"
    },
    "1364": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3072,
        3560
      ],
      "op": "POP",
      "path": "4"
    },
    "1365": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "o",
      "offset": [
        3072,
        3560
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1366": {
      "fn": "Chainlink.initialize",
      "offset": [
        998,
        1363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1367": {
      "fn": "Chainlink.initialize",
      "offset": [
        1147,
        1171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55E"
    },
    "1370": {
      "fn": "Chainlink.initialize",
      "offset": [
        1147,
        1171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "1373": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1147,
        1171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1374": {
      "fn": "Chainlink.initialize",
      "offset": [
        1147,
        1171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1375": {
      "fn": "Chainlink.initialize",
      "offset": [
        1179,
        1228
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0x56E"
    },
    "1378": {
      "fn": "Chainlink.initialize",
      "offset": [
        1200,
        1204
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1379": {
      "fn": "Chainlink.initialize",
      "offset": [
        1200,
        1208
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1381": {
      "fn": "Chainlink.initialize",
      "offset": [
        1200,
        1208
      ],
      "op": "ADD",
      "path": "3"
    },
    "1382": {
      "fn": "Chainlink.initialize",
      "offset": [
        1200,
        1208
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1383": {
      "offset": [
        365,
        368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1386": {
      "fn": "Chainlink.initialize",
      "offset": [
        1179,
        1199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72D"
    },
    "1389": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1179,
        1228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1390": {
      "fn": "Chainlink.initialize",
      "offset": [
        1179,
        1228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "fn": "Chainlink.initialize",
      "offset": [
        1234,
        1247
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 18
    },
    "1394": {
      "fn": "Chainlink.initialize",
      "offset": [
        1234,
        1247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1395": {
      "fn": "Chainlink.initialize",
      "offset": [
        1234,
        1247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "fn": "Chainlink.initialize",
      "offset": [
        1253,
        1292
      ],
      "op": "AND",
      "path": "3",
      "statement": 19
    },
    "1405": {
      "fn": "Chainlink.initialize",
      "offset": [
        1253,
        1273
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1407": {
      "fn": "Chainlink.initialize",
      "offset": [
        1253,
        1273
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1408": {
      "fn": "Chainlink.initialize",
      "offset": [
        1253,
        1273
      ],
      "op": "ADD",
      "path": "3"
    },
    "1409": {
      "fn": "Chainlink.initialize",
      "offset": [
        1253,
        1292
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "op": "NOT"
    },
    "1419": {
      "fn": "Chainlink.initialize",
      "offset": [
        1298,
        1341
      ],
      "op": "AND",
      "path": "3",
      "statement": 20
    },
    "1420": {
      "fn": "Chainlink.initialize",
      "offset": [
        1298,
        1321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1422": {
      "fn": "Chainlink.initialize",
      "offset": [
        1298,
        1321
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1423": {
      "fn": "Chainlink.initialize",
      "offset": [
        1298,
        1321
      ],
      "op": "ADD",
      "path": "3"
    },
    "1424": {
      "fn": "Chainlink.initialize",
      "offset": [
        1298,
        1341
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1425": {
      "fn": "Chainlink.initialize",
      "offset": [
        1234,
        1247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1426": {
      "fn": "Chainlink.initialize",
      "jump": "o",
      "offset": [
        998,
        1363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1427": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2841,
        3039
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1428": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2943,
        2998
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 21,
      "value": "0x5A0"
    },
    "1431": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2954,
        2957
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1432": {
      "offset": [
        404,
        405
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1434": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2984,
        2989
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1435": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2978,
        2997
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1436": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2943,
        2953
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x76D"
    },
    "1439": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        2943,
        2998
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1440": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2943,
        2998
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1441": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        3008,
        3032
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 22,
      "value": "0x365"
    },
    "1444": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        3008,
        3011
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1445": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        3025,
        3030
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1446": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        3008,
        3018
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x847"
    },
    "1449": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        3008,
        3032
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1450": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1750,
        2198
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1451": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1460": {
      "op": "NOT"
    },
    "1461": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1842,
        1847
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1462": {
      "branch": 67,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1842,
        1870
      ],
      "op": "SLT",
      "path": "14"
    },
    "1463": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1464": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5CA"
    },
    "1467": {
      "branch": 67,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1468": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1886,
        1916
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 23,
      "value": "0x5C5"
    },
    "1471": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1905,
        1908
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1472": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1910,
        1915
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1473": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1886,
        1904
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x868"
    },
    "1476": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        1886,
        1916
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1477": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1886,
        1916
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1478": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x605"
    },
    "1481": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1482": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1839,
        2192
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1483": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1944,
        1962
      ],
      "op": "PUSH8",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1492": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1936,
        1941
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1493": {
      "branch": 68,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1936,
        1962
      ],
      "op": "SGT",
      "path": "14"
    },
    "1494": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1933,
        2192
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1495": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1933,
        2192
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E4"
    },
    "1498": {
      "branch": 68,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1933,
        2192
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1499": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1978,
        2002
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 24,
      "value": "0x5C5"
    },
    "1502": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1991,
        1994
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1503": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1996,
        2001
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1504": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1978,
        1990
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8A1"
    },
    "1507": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        1978,
        2002
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1508": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1933,
        2192
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1509": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2031,
        2032
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1511": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2022,
        2027
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1512": {
      "branch": 69,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2022,
        2032
      ],
      "op": "SLT",
      "path": "14"
    },
    "1513": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2019,
        2192
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F8"
    },
    "1516": {
      "branch": 69,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2019,
        2192
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1517": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2048,
        2092
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 25,
      "value": "0x5C5"
    },
    "1520": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2059,
        2062
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1521": {
      "offset": [
        249,
        250
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1523": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2085,
        2090
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1524": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2048,
        2058
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x76D"
    },
    "1527": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        2048,
        2092
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1528": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2019,
        2192
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1529": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2123,
        2181
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 26,
      "value": "0x605"
    },
    "1532": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2134,
        2137
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1533": {
      "offset": [
        305,
        306
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1535": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2169,
        2179
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1536": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2169,
        2179
      ],
      "op": "NOT",
      "path": "14"
    },
    "1537": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2123,
        2133
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x76D"
    },
    "1540": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        2123,
        2181
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1541": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2123,
        2181
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1542": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1750,
        2198
      ],
      "op": "POP",
      "path": "14"
    },
    "1543": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1750,
        2198
      ],
      "op": "POP",
      "path": "14"
    },
    "1544": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "o",
      "offset": [
        1750,
        2198
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1545": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7564,
        8091
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1546": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7652,
        7664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1548": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7711,
        7740
      ],
      "op": "PUSH4",
      "path": "4",
      "statement": 27,
      "value": "0x40429946"
    },
    "1553": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7711,
        7740
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "1555": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7711,
        7740
      ],
      "op": "SHL",
      "path": "4"
    },
    "1556": {
      "offset": [
        719,
        720
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1558": {
      "offset": [
        663,
        664
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1559": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7961,
        7965
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1560": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7961,
        7968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1562": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7961,
        7968
      ],
      "op": "ADD",
      "path": "4"
    },
    "1563": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7961,
        7968
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1564": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7976,
        7980
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1565": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7976,
        7996
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1567": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7976,
        7996
      ],
      "op": "ADD",
      "path": "4"
    },
    "1568": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7976,
        7996
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1569": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8004,
        8008
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1570": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8004,
        8027
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1572": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8004,
        8027
      ],
      "op": "ADD",
      "path": "4"
    },
    "1573": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8004,
        8027
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1574": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8035,
        8039
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1575": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8035,
        8045
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1577": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8035,
        8045
      ],
      "op": "ADD",
      "path": "4"
    },
    "1578": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8035,
        8045
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1579": {
      "offset": [
        765,
        766
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1581": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8077
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1582": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8081
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "1584": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8081
      ],
      "op": "ADD",
      "path": "4"
    },
    "1585": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8081
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1586": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8085
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1588": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8085
      ],
      "op": "ADD",
      "path": "4"
    },
    "1589": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        8073,
        8085
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1590": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1592": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1593": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1595": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1596": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1597": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1607": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1608": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1609": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1611": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1612": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1613": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1614": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1615": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1617": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1618": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1619": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1620": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1621": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1623": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1624": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1634": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1635": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1636": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1638": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1639": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "NOT",
      "path": "4"
    },
    "1649": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1650": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1651": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1652": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1654": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1655": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1656": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1657": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1658": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1660": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1661": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1662": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1663": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1664": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1666": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1667": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1668": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1670": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1671": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1672": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1673": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SUB",
      "path": "4"
    },
    "1674": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1675": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1676": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1677": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1678": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1679": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1680": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1681": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1682": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1684": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1685": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1686": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1687": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1688": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1689": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1690": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1692": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1693": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1694": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1695": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1696": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1697": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1699": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1700": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1701": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1702": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "LT",
      "path": "4"
    },
    "1703": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1704": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BB"
    },
    "1707": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1708": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1709": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1710": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1711": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1712": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1713": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1714": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1715": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1716": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1718": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1719": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A3"
    },
    "1722": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1723": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1724": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1725": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1726": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1727": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1728": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1729": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1730": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1731": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1732": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1733": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1734": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1736": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1737": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1738": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1739": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E8"
    },
    "1742": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1743": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1744": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1745": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SUB",
      "path": "4"
    },
    "1746": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1747": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1748": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1750": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1751": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1753": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SUB",
      "path": "4"
    },
    "1754": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1757": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "EXP",
      "path": "4"
    },
    "1758": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SUB",
      "path": "4"
    },
    "1759": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "NOT",
      "path": "4"
    },
    "1760": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1761": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1762": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1763": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1765": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1766": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1767": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "POP",
      "path": "4"
    },
    "1768": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1772": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1773": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1776": {
      "op": "NOT"
    },
    "1777": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1778": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1779": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SUB",
      "path": "4"
    },
    "1780": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1781": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1782": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1783": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1784": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1785": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1786": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1788": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1789": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "ADD",
      "path": "4"
    },
    "1790": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1791": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "op": "NOT"
    },
    "1810": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1811": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP14",
      "path": "4"
    },
    "1812": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "AND",
      "path": "4"
    },
    "1813": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP13",
      "path": "4"
    },
    "1814": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1815": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP13",
      "path": "4"
    },
    "1816": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "OR",
      "path": "4"
    },
    "1817": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1818": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP12",
      "path": "4"
    },
    "1819": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP9",
      "path": "4"
    },
    "1822": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7681,
        8086
      ],
      "op": "SWAP10",
      "path": "4"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "op": "POP"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "op": "POP"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7564,
        8091
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1834": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7564,
        8091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1835": {
      "fn": "ChainlinkClient.encodeRequest",
      "offset": [
        7564,
        8091
      ],
      "op": "POP",
      "path": "4"
    },
    "1836": {
      "fn": "ChainlinkClient.encodeRequest",
      "jump": "o",
      "offset": [
        7564,
        8091
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1837": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1838": {
      "fn": "BufferChainlink.init",
      "offset": [
        1052,
        1065
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x735"
    },
    "1841": {
      "fn": "BufferChainlink.init",
      "offset": [
        1052,
        1065
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "1844": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1052,
        1065
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1845": {
      "fn": "BufferChainlink.init",
      "offset": [
        1052,
        1065
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1846": {
      "fn": "BufferChainlink.init",
      "offset": [
        1088,
        1090
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1848": {
      "fn": "BufferChainlink.init",
      "offset": [
        1077,
        1085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1849": {
      "fn": "BufferChainlink.init",
      "offset": [
        1077,
        1090
      ],
      "op": "MOD",
      "path": "13"
    },
    "1850": {
      "branch": 61,
      "fn": "BufferChainlink.init",
      "offset": [
        1077,
        1095
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1851": {
      "fn": "BufferChainlink.init",
      "offset": [
        1073,
        1144
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x74A"
    },
    "1854": {
      "branch": 61,
      "fn": "BufferChainlink.init",
      "offset": [
        1073,
        1144
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1855": {
      "fn": "BufferChainlink.init",
      "offset": [
        1134,
        1136
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 28,
      "value": "0x20"
    },
    "1857": {
      "fn": "BufferChainlink.init",
      "offset": [
        1123,
        1131
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1858": {
      "fn": "BufferChainlink.init",
      "offset": [
        1123,
        1136
      ],
      "op": "MOD",
      "path": "13"
    },
    "1859": {
      "fn": "BufferChainlink.init",
      "offset": [
        1117,
        1119
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1861": {
      "fn": "BufferChainlink.init",
      "offset": [
        1117,
        1137
      ],
      "op": "SUB",
      "path": "13"
    },
    "1862": {
      "fn": "BufferChainlink.init",
      "offset": [
        1105,
        1137
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1863": {
      "fn": "BufferChainlink.init",
      "offset": [
        1105,
        1137
      ],
      "op": "ADD",
      "path": "13"
    },
    "1864": {
      "fn": "BufferChainlink.init",
      "offset": [
        1105,
        1137
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1865": {
      "fn": "BufferChainlink.init",
      "offset": [
        1105,
        1137
      ],
      "op": "POP",
      "path": "13"
    },
    "1866": {
      "fn": "BufferChainlink.init",
      "offset": [
        1073,
        1144
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1203
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 29,
      "value": "0x20"
    },
    "1870": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1203
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1871": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1203
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1872": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1203
      ],
      "op": "ADD",
      "path": "13"
    },
    "1873": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1214
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1874": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1214
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1875": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1214
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1876": {
      "fn": "BufferChainlink.init",
      "offset": [
        1254,
        1258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1878": {
      "fn": "BufferChainlink.init",
      "offset": [
        1248,
        1259
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1879": {
      "fn": "BufferChainlink.init",
      "offset": [
        1248,
        1259
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1880": {
      "fn": "BufferChainlink.init",
      "offset": [
        1266,
        1282
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1881": {
      "fn": "BufferChainlink.init",
      "offset": [
        1266,
        1282
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1882": {
      "fn": "BufferChainlink.init",
      "offset": [
        1266,
        1282
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1885": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1303
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1886": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1303
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1887": {
      "fn": "BufferChainlink.init",
      "offset": [
        1331,
        1349
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1888": {
      "fn": "BufferChainlink.init",
      "offset": [
        1331,
        1349
      ],
      "op": "ADD",
      "path": "13"
    },
    "1889": {
      "fn": "BufferChainlink.init",
      "offset": [
        1323,
        1350
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1890": {
      "fn": "BufferChainlink.init",
      "offset": [
        1323,
        1350
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1891": {
      "fn": "BufferChainlink.init",
      "offset": [
        1323,
        1350
      ],
      "op": "ADD",
      "path": "13"
    },
    "1892": {
      "fn": "BufferChainlink.init",
      "offset": [
        1310,
        1351
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1893": {
      "fn": "BufferChainlink.init",
      "offset": [
        1310,
        1351
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1894": {
      "fn": "BufferChainlink.init",
      "offset": [
        1191,
        1194
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1895": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1896": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1897": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1898": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "POP",
      "path": "13"
    },
    "1899": {
      "fn": "BufferChainlink.init",
      "offset": [
        982,
        1377
      ],
      "op": "POP",
      "path": "13"
    },
    "1900": {
      "fn": "BufferChainlink.init",
      "jump": "o",
      "offset": [
        982,
        1377
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1901": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        717,
        1441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1902": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        832,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "1904": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        823,
        828
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1905": {
      "branch": 70,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        823,
        834
      ],
      "op": "GT",
      "path": "14"
    },
    "1906": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        820,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x78E"
    },
    "1909": {
      "branch": 70,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        820,
        1435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1910": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        850,
        894
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 30,
      "value": "0x788"
    },
    "1913": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        850,
        853
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1914": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        872,
        892
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1916": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        882,
        883
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1918": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        873,
        883
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1919": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        873,
        883
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1920": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        873,
        883
      ],
      "op": "SHL",
      "path": "14"
    },
    "1921": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        872,
        892
      ],
      "op": "AND",
      "path": "14"
    },
    "1922": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        872,
        892
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1923": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        872,
        892
      ],
      "op": "OR",
      "path": "14"
    },
    "1924": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        850,
        865
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "1927": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        850,
        894
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1928": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        850,
        894
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1929": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        850,
        894
      ],
      "op": "POP",
      "path": "14"
    },
    "1930": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        820,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x365"
    },
    "1933": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        820,
        1435
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1934": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        820,
        1435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1935": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        923,
        927
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1937": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        914,
        919
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1938": {
      "branch": 71,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        914,
        927
      ],
      "op": "GT",
      "path": "14"
    },
    "1939": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        911,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7B8"
    },
    "1942": {
      "branch": 71,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        911,
        1435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1943": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        943,
        984
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 31,
      "value": "0x7AB"
    },
    "1946": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        943,
        946
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1947": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        980,
        982
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x18"
    },
    "1949": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        966,
        976
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE0"
    },
    "1952": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        975,
        976
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1954": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        966,
        976
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1955": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        966,
        976
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1956": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        966,
        976
      ],
      "op": "SHL",
      "path": "14"
    },
    "1957": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        966,
        976
      ],
      "op": "AND",
      "path": "14"
    },
    "1958": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        965,
        982
      ],
      "op": "OR",
      "path": "14"
    },
    "1959": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        943,
        958
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "1962": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        943,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1963": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        943,
        984
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        998,
        1021
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 32,
      "value": "0x788"
    },
    "1968": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        998,
        1001
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1969": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1012,
        1017
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1970": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1019,
        1020
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1972": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        998,
        1011
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8EE"
    },
    "1975": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        998,
        1021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1976": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        911,
        1435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1977": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1050,
        1056
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFFFF"
    },
    "1980": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1041,
        1046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1981": {
      "branch": 72,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1041,
        1056
      ],
      "op": "GT",
      "path": "14"
    },
    "1982": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1038,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7E3"
    },
    "1985": {
      "branch": 72,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1038,
        1435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1986": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1072,
        1113
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 33,
      "value": "0x7D6"
    },
    "1989": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1072,
        1075
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1990": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1109,
        1111
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "1992": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1095,
        1105
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE0"
    },
    "1995": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1104,
        1105
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1997": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1095,
        1105
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1998": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1095,
        1105
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1999": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1095,
        1105
      ],
      "op": "SHL",
      "path": "14"
    },
    "2000": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1095,
        1105
      ],
      "op": "AND",
      "path": "14"
    },
    "2001": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1094,
        1111
      ],
      "op": "OR",
      "path": "14"
    },
    "2002": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1072,
        1087
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "2005": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1072,
        1113
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2006": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1072,
        1113
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1127,
        1150
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 34,
      "value": "0x788"
    },
    "2011": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1127,
        1130
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2012": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1141,
        1146
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2013": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1148,
        1149
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2015": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1127,
        1140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8EE"
    },
    "2018": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1127,
        1150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2019": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1038,
        1435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2020": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1179,
        1189
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2025": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1170,
        1175
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2026": {
      "branch": 73,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1170,
        1189
      ],
      "op": "GT",
      "path": "14"
    },
    "2027": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1167,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x810"
    },
    "2030": {
      "branch": 73,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1167,
        1435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2031": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1205,
        1246
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 35,
      "value": "0x803"
    },
    "2034": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1205,
        1208
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2035": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1242,
        1244
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "2037": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1228,
        1238
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE0"
    },
    "2040": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1237,
        1238
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2042": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1228,
        1238
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2043": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1228,
        1238
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2044": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1228,
        1238
      ],
      "op": "SHL",
      "path": "14"
    },
    "2045": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1228,
        1238
      ],
      "op": "AND",
      "path": "14"
    },
    "2046": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1227,
        1244
      ],
      "op": "OR",
      "path": "14"
    },
    "2047": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1205,
        1220
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "2050": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1205,
        1246
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2051": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1205,
        1246
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1260,
        1283
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 36,
      "value": "0x788"
    },
    "2056": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1260,
        1263
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2057": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1274,
        1279
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2058": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1281,
        1282
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2060": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1260,
        1273
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8EE"
    },
    "2063": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1260,
        1283
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2064": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1167,
        1435
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2065": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1312,
        1330
      ],
      "op": "PUSH8",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2074": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1303,
        1308
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2075": {
      "branch": 74,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1303,
        1330
      ],
      "op": "GT",
      "path": "14"
    },
    "2076": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1300,
        1435
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x365"
    },
    "2079": {
      "branch": 74,
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1300,
        1435
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2080": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1346,
        1387
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 37,
      "value": "0x834"
    },
    "2083": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1346,
        1349
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2084": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1383,
        1385
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1B"
    },
    "2086": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1369,
        1379
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE0"
    },
    "2089": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1378,
        1379
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2091": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1369,
        1379
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2092": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1369,
        1379
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2093": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1369,
        1379
      ],
      "op": "SHL",
      "path": "14"
    },
    "2094": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1369,
        1379
      ],
      "op": "AND",
      "path": "14"
    },
    "2095": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1368,
        1385
      ],
      "op": "OR",
      "path": "14"
    },
    "2096": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1346,
        1361
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "2099": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1346,
        1387
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2100": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1346,
        1387
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1401,
        1424
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 38,
      "value": "0x841"
    },
    "2105": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1401,
        1404
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2106": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2107": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1422,
        1423
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2109": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8EE"
    },
    "2112": {
      "fn": "CBORChainlink.encodeType",
      "jump": "i",
      "offset": [
        1401,
        1424
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2113": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1401,
        1424
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2114": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        1401,
        1424
      ],
      "op": "POP",
      "path": "14"
    },
    "2115": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        717,
        1441
      ],
      "op": "POP",
      "path": "14"
    },
    "2116": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        717,
        1441
      ],
      "op": "POP",
      "path": "14"
    },
    "2117": {
      "fn": "CBORChainlink.encodeType",
      "offset": [
        717,
        1441
      ],
      "op": "POP",
      "path": "14"
    },
    "2118": {
      "fn": "CBORChainlink.encodeType",
      "jump": "o",
      "offset": [
        717,
        1441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2119": {
      "fn": "BufferChainlink.append",
      "offset": [
        4536,
        4691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2120": {
      "fn": "BufferChainlink.append",
      "offset": [
        4613,
        4626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84F"
    },
    "2123": {
      "fn": "BufferChainlink.append",
      "offset": [
        4613,
        4626
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2126": {
      "fn": "BufferChainlink.append",
      "jump": "i",
      "offset": [
        4613,
        4626
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2127": {
      "fn": "BufferChainlink.append",
      "offset": [
        4613,
        4626
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2128": {
      "fn": "BufferChainlink.append",
      "offset": [
        4641,
        4686
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 39,
      "value": "0x861"
    },
    "2131": {
      "fn": "BufferChainlink.append",
      "offset": [
        4647,
        4650
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2132": {
      "fn": "BufferChainlink.append",
      "offset": [
        4652,
        4655
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2133": {
      "fn": "BufferChainlink.append",
      "offset": [
        4652,
        4659
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2135": {
      "fn": "BufferChainlink.append",
      "offset": [
        4652,
        4659
      ],
      "op": "ADD",
      "path": "13"
    },
    "2136": {
      "fn": "BufferChainlink.append",
      "offset": [
        4652,
        4659
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2137": {
      "fn": "BufferChainlink.append",
      "offset": [
        4652,
        4666
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2138": {
      "fn": "BufferChainlink.append",
      "offset": [
        4668,
        4672
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2139": {
      "fn": "BufferChainlink.append",
      "offset": [
        4674,
        4678
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2140": {
      "fn": "BufferChainlink.append",
      "offset": [
        4674,
        4685
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2141": {
      "fn": "BufferChainlink.append",
      "offset": [
        4641,
        4646
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x90F"
    },
    "2144": {
      "fn": "BufferChainlink.append",
      "jump": "i",
      "offset": [
        4641,
        4686
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2145": {
      "fn": "BufferChainlink.append",
      "offset": [
        4641,
        4686
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2146": {
      "fn": "BufferChainlink.append",
      "offset": [
        4634,
        4686
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2147": {
      "fn": "BufferChainlink.append",
      "offset": [
        4536,
        4691
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "fn": "BufferChainlink.append",
      "jump": "o",
      "offset": [
        4536,
        4691
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2152": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2606,
        2835
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2153": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2702,
        2774
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 40,
      "value": "0x873"
    },
    "2156": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2702,
        2705
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2157": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2724,
        2772
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC3"
    },
    "2159": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2702,
        2717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "2162": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "jump": "i",
      "offset": [
        2702,
        2774
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2163": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2702,
        2774
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2164": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2702,
        2774
      ],
      "op": "POP",
      "path": "14"
    },
    "2165": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2782,
        2828
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 41,
      "value": "0x605"
    },
    "2168": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2794,
        2797
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2169": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2820,
        2825
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2172": {
      "op": "NOT"
    },
    "2173": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2815,
        2825
      ],
      "op": "SUB",
      "path": "14"
    },
    "2174": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2176": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2177": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2179": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "ADD",
      "path": "14"
    },
    "2180": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2181": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2182": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2183": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2184": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2186": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "ADD",
      "path": "14"
    },
    "2187": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2188": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "POP",
      "path": "14"
    },
    "2189": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "POP",
      "path": "14"
    },
    "2190": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2192": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2193": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2195": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2196": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2197": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "SUB",
      "path": "14"
    },
    "2198": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "SUB",
      "path": "14"
    },
    "2199": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2200": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2201": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2202": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2204": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2799,
        2827
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2205": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2782,
        2793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9BB"
    },
    "2208": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "jump": "i",
      "offset": [
        2782,
        2828
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2209": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2391,
        2600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2210": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2481,
        2544
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 42,
      "value": "0x8AC"
    },
    "2213": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2481,
        2484
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2214": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2503,
        2542
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC2"
    },
    "2216": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2481,
        2496
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D6"
    },
    "2219": {
      "fn": "CBORChainlink.encodeBigNum",
      "jump": "i",
      "offset": [
        2481,
        2544
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2220": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2481,
        2544
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2221": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2481,
        2544
      ],
      "op": "POP",
      "path": "14"
    },
    "2222": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2552,
        2593
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 43,
      "value": "0x605"
    },
    "2225": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2564,
        2567
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2226": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2585,
        2590
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2227": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2229": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2230": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2232": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "ADD",
      "path": "14"
    },
    "2233": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2234": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2235": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2236": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2237": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2239": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "ADD",
      "path": "14"
    },
    "2240": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2241": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "POP",
      "path": "14"
    },
    "2242": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "POP",
      "path": "14"
    },
    "2243": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2245": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2246": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2248": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2249": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2250": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "SUB",
      "path": "14"
    },
    "2251": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "SUB",
      "path": "14"
    },
    "2252": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2253": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2254": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2255": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2257": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2569,
        2592
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2258": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2552,
        2563
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9BB"
    },
    "2261": {
      "fn": "CBORChainlink.encodeBigNum",
      "jump": "i",
      "offset": [
        2552,
        2593
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2262": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5851,
        5995
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2263": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5925,
        5938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8DE"
    },
    "2266": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5925,
        5938
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2269": {
      "fn": "BufferChainlink.appendUint8",
      "jump": "i",
      "offset": [
        5925,
        5938
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2270": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5925,
        5938
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2271": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5953,
        5990
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 44,
      "value": "0x861"
    },
    "2274": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5964,
        5967
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2275": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5969,
        5972
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2276": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5969,
        5976
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2278": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5969,
        5976
      ],
      "op": "ADD",
      "path": "13"
    },
    "2279": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5969,
        5976
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2280": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5969,
        5983
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2281": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5985,
        5989
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2282": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        5953,
        5963
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9C8"
    },
    "2285": {
      "fn": "BufferChainlink.appendUint8",
      "jump": "i",
      "offset": [
        5953,
        5990
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2286": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9543,
        9697
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2287": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9624,
        9637
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8F6"
    },
    "2290": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9624,
        9637
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2293": {
      "fn": "BufferChainlink.appendInt",
      "jump": "i",
      "offset": [
        9624,
        9637
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2294": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9624,
        9637
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2295": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9652,
        9692
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 45,
      "value": "0x907"
    },
    "2298": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9661,
        9664
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2299": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9666,
        9669
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2300": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9666,
        9673
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2302": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9666,
        9673
      ],
      "op": "ADD",
      "path": "13"
    },
    "2303": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9666,
        9673
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2304": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9666,
        9680
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2305": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9682,
        9686
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2306": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9688,
        9691
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2307": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9652,
        9660
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA13"
    },
    "2310": {
      "fn": "BufferChainlink.appendInt",
      "jump": "i",
      "offset": [
        9652,
        9692
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2311": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9652,
        9692
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2312": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9645,
        9692
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2313": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9543,
        9697
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "fn": "BufferChainlink.appendInt",
      "jump": "o",
      "offset": [
        9543,
        9697
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2319": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2320": {
      "fn": "BufferChainlink.write",
      "offset": [
        2786,
        2799
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x917"
    },
    "2323": {
      "fn": "BufferChainlink.write",
      "offset": [
        2786,
        2799
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2326": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2786,
        2799
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2327": {
      "fn": "BufferChainlink.write",
      "offset": [
        2786,
        2799
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2328": {
      "fn": "BufferChainlink.write",
      "offset": [
        2822,
        2826
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 46
    },
    "2329": {
      "fn": "BufferChainlink.write",
      "offset": [
        2822,
        2833
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2330": {
      "fn": "BufferChainlink.write",
      "offset": [
        2815,
        2818
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2331": {
      "fn": "BufferChainlink.write",
      "offset": [
        2815,
        2833
      ],
      "op": "GT",
      "path": "13"
    },
    "2332": {
      "branch": 62,
      "fn": "BufferChainlink.write",
      "offset": [
        2815,
        2833
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2333": {
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x925"
    },
    "2336": {
      "branch": 62,
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2337": {
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2339": {
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2340": {
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2341": {
      "fn": "BufferChainlink.write",
      "offset": [
        2807,
        2834
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2342": {
      "fn": "BufferChainlink.write",
      "offset": [
        2857,
        2860
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2343": {
      "fn": "BufferChainlink.write",
      "offset": [
        2857,
        2869
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2345": {
      "fn": "BufferChainlink.write",
      "offset": [
        2857,
        2869
      ],
      "op": "ADD",
      "path": "13"
    },
    "2346": {
      "fn": "BufferChainlink.write",
      "offset": [
        2857,
        2869
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2347": {
      "fn": "BufferChainlink.write",
      "offset": [
        2851,
        2854
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2348": {
      "fn": "BufferChainlink.write",
      "offset": [
        2845,
        2848
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2349": {
      "fn": "BufferChainlink.write",
      "offset": [
        2845,
        2854
      ],
      "op": "ADD",
      "path": "13"
    },
    "2350": {
      "branch": 63,
      "fn": "BufferChainlink.write",
      "offset": [
        2845,
        2869
      ],
      "op": "GT",
      "path": "13"
    },
    "2351": {
      "fn": "BufferChainlink.write",
      "offset": [
        2841,
        2931
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2352": {
      "fn": "BufferChainlink.write",
      "offset": [
        2841,
        2931
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x94F"
    },
    "2355": {
      "branch": 63,
      "fn": "BufferChainlink.write",
      "offset": [
        2841,
        2931
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2356": {
      "fn": "BufferChainlink.write",
      "offset": [
        2879,
        2924
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 47,
      "value": "0x94F"
    },
    "2359": {
      "fn": "BufferChainlink.write",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2360": {
      "fn": "BufferChainlink.write",
      "offset": [
        2891,
        2919
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x947"
    },
    "2363": {
      "fn": "BufferChainlink.write",
      "offset": [
        2895,
        2898
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2364": {
      "fn": "BufferChainlink.write",
      "offset": [
        2895,
        2907
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2366": {
      "fn": "BufferChainlink.write",
      "offset": [
        2895,
        2907
      ],
      "op": "ADD",
      "path": "13"
    },
    "2367": {
      "fn": "BufferChainlink.write",
      "offset": [
        2895,
        2907
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2368": {
      "fn": "BufferChainlink.write",
      "offset": [
        2915,
        2918
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2369": {
      "fn": "BufferChainlink.write",
      "offset": [
        2909,
        2912
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2370": {
      "fn": "BufferChainlink.write",
      "offset": [
        2909,
        2918
      ],
      "op": "ADD",
      "path": "13"
    },
    "2371": {
      "fn": "BufferChainlink.write",
      "offset": [
        2891,
        2894
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA71"
    },
    "2374": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2891,
        2919
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2375": {
      "fn": "BufferChainlink.write",
      "offset": [
        2891,
        2919
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2376": {
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        2923
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2378": {
      "fn": "BufferChainlink.write",
      "offset": [
        2891,
        2923
      ],
      "op": "MUL",
      "path": "13"
    },
    "2379": {
      "fn": "BufferChainlink.write",
      "offset": [
        2879,
        2885
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA88"
    },
    "2382": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2879,
        2924
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2383": {
      "fn": "BufferChainlink.write",
      "offset": [
        2879,
        2924
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2384": {
      "fn": "BufferChainlink.write",
      "offset": [
        2937,
        2946
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2386": {
      "fn": "BufferChainlink.write",
      "offset": [
        2952,
        2960
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2387": {
      "fn": "BufferChainlink.write",
      "offset": [
        3046,
        3049
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2388": {
      "fn": "BufferChainlink.write",
      "offset": [
        3040,
        3050
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2389": {
      "fn": "BufferChainlink.write",
      "offset": [
        3117,
        3123
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2390": {
      "fn": "BufferChainlink.write",
      "offset": [
        3111,
        3124
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2391": {
      "fn": "BufferChainlink.write",
      "offset": [
        3233,
        3236
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2392": {
      "fn": "BufferChainlink.write",
      "offset": [
        3228,
        3230
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2394": {
      "fn": "BufferChainlink.write",
      "offset": [
        3220,
        3226
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2395": {
      "fn": "BufferChainlink.write",
      "offset": [
        3216,
        3231
      ],
      "op": "ADD",
      "path": "13"
    },
    "2396": {
      "fn": "BufferChainlink.write",
      "offset": [
        3212,
        3237
      ],
      "op": "ADD",
      "path": "13"
    },
    "2397": {
      "fn": "BufferChainlink.write",
      "offset": [
        3204,
        3237
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2398": {
      "fn": "BufferChainlink.write",
      "offset": [
        3204,
        3237
      ],
      "op": "POP",
      "path": "13"
    },
    "2399": {
      "fn": "BufferChainlink.write",
      "offset": [
        3317,
        3323
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2400": {
      "fn": "BufferChainlink.write",
      "offset": [
        3311,
        3314
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2401": {
      "fn": "BufferChainlink.write",
      "offset": [
        3306,
        3309
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2402": {
      "fn": "BufferChainlink.write",
      "offset": [
        3302,
        3315
      ],
      "op": "ADD",
      "path": "13"
    },
    "2403": {
      "fn": "BufferChainlink.write",
      "offset": [
        3299,
        3324
      ],
      "op": "GT",
      "path": "13"
    },
    "2404": {
      "fn": "BufferChainlink.write",
      "offset": [
        3296,
        3298
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2405": {
      "fn": "BufferChainlink.write",
      "offset": [
        3296,
        3298
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x96E"
    },
    "2408": {
      "fn": "BufferChainlink.write",
      "offset": [
        3296,
        3298
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2409": {
      "fn": "BufferChainlink.write",
      "offset": [
        3359,
        3362
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2410": {
      "fn": "BufferChainlink.write",
      "offset": [
        3354,
        3357
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2411": {
      "fn": "BufferChainlink.write",
      "offset": [
        3350,
        3363
      ],
      "op": "ADD",
      "path": "13"
    },
    "2412": {
      "fn": "BufferChainlink.write",
      "offset": [
        3342,
        3348
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2413": {
      "fn": "BufferChainlink.write",
      "offset": [
        3335,
        3364
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2414": {
      "fn": "BufferChainlink.write",
      "offset": [
        3296,
        3298
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "fn": "BufferChainlink.write",
      "offset": [
        3396,
        3398
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2420": {
      "fn": "BufferChainlink.write",
      "offset": [
        3386,
        3399
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2421": {
      "fn": "BufferChainlink.write",
      "offset": [
        3386,
        3399
      ],
      "op": "ADD",
      "path": "13"
    },
    "2422": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2423": {
      "fn": "BufferChainlink.write",
      "offset": [
        3471,
        3473
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2425": {
      "fn": "BufferChainlink.write",
      "offset": [
        3464,
        3467
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2426": {
      "fn": "BufferChainlink.write",
      "offset": [
        3464,
        3473
      ],
      "op": "LT",
      "path": "13"
    },
    "2427": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x995"
    },
    "2430": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2431": {
      "fn": "BufferChainlink.write",
      "offset": [
        3526,
        3536
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2432": {
      "fn": "BufferChainlink.write",
      "offset": [
        3526,
        3536
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2433": {
      "fn": "BufferChainlink.write",
      "offset": [
        3513,
        3537
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2434": {
      "fn": "BufferChainlink.write",
      "offset": [
        3513,
        3537
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2437": {
      "op": "NOT"
    },
    "2438": {
      "fn": "BufferChainlink.write",
      "offset": [
        3475,
        3484
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 48
    },
    "2439": {
      "fn": "BufferChainlink.write",
      "offset": [
        3475,
        3484
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2440": {
      "fn": "BufferChainlink.write",
      "offset": [
        3475,
        3484
      ],
      "op": "ADD",
      "path": "13"
    },
    "2441": {
      "fn": "BufferChainlink.write",
      "offset": [
        3475,
        3484
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2442": {
      "fn": "BufferChainlink.write",
      "offset": [
        3560,
        3562
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 49,
      "value": "0x20"
    },
    "2444": {
      "fn": "BufferChainlink.write",
      "offset": [
        3552,
        3562
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2445": {
      "fn": "BufferChainlink.write",
      "offset": [
        3552,
        3562
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2446": {
      "fn": "BufferChainlink.write",
      "offset": [
        3552,
        3562
      ],
      "op": "ADD",
      "path": "13"
    },
    "2447": {
      "fn": "BufferChainlink.write",
      "offset": [
        3552,
        3562
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2448": {
      "fn": "BufferChainlink.write",
      "offset": [
        3570,
        3579
      ],
      "op": "ADD",
      "path": "13",
      "statement": 50
    },
    "2449": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x976"
    },
    "2452": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2453": {
      "fn": "BufferChainlink.write",
      "offset": [
        3457,
        3586
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2454": {
      "fn": "BufferChainlink.write",
      "offset": [
        3695,
        3705
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2455": {
      "fn": "BufferChainlink.write",
      "offset": [
        3744,
        3755
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2456": {
      "fn": "BufferChainlink.write",
      "offset": [
        3744,
        3755
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2459": {
      "op": "NOT"
    },
    "2460": {
      "fn": "BufferChainlink.write",
      "offset": [
        3640,
        3642
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2462": {
      "fn": "BufferChainlink.write",
      "offset": [
        3640,
        3648
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2463": {
      "fn": "BufferChainlink.write",
      "offset": [
        3640,
        3648
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2464": {
      "fn": "BufferChainlink.write",
      "offset": [
        3640,
        3648
      ],
      "op": "SUB",
      "path": "13"
    },
    "2465": {
      "fn": "BufferChainlink.write",
      "offset": [
        3632,
        3635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2468": {
      "fn": "BufferChainlink.write",
      "offset": [
        3632,
        3649
      ],
      "op": "EXP",
      "path": "13"
    },
    "2469": {
      "fn": "BufferChainlink.write",
      "offset": [
        3632,
        3653
      ],
      "op": "ADD",
      "path": "13"
    },
    "2470": {
      "fn": "BufferChainlink.write",
      "offset": [
        3740,
        3762
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2471": {
      "fn": "BufferChainlink.write",
      "offset": [
        3740,
        3762
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2472": {
      "fn": "BufferChainlink.write",
      "offset": [
        3740,
        3762
      ],
      "op": "AND",
      "path": "13"
    },
    "2473": {
      "fn": "BufferChainlink.write",
      "offset": [
        3707,
        3716
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2474": {
      "fn": "BufferChainlink.write",
      "offset": [
        3707,
        3716
      ],
      "op": "NOT",
      "path": "13"
    },
    "2475": {
      "fn": "BufferChainlink.write",
      "offset": [
        3691,
        3717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2476": {
      "fn": "BufferChainlink.write",
      "offset": [
        3691,
        3717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2477": {
      "fn": "BufferChainlink.write",
      "offset": [
        3691,
        3717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2478": {
      "fn": "BufferChainlink.write",
      "offset": [
        3691,
        3717
      ],
      "op": "AND",
      "path": "13"
    },
    "2479": {
      "fn": "BufferChainlink.write",
      "offset": [
        3782,
        3803
      ],
      "op": "OR",
      "path": "13"
    },
    "2480": {
      "fn": "BufferChainlink.write",
      "offset": [
        3769,
        3804
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2481": {
      "fn": "BufferChainlink.write",
      "offset": [
        3769,
        3804
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "fn": "BufferChainlink.write",
      "offset": [
        3823,
        3826
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 51
    },
    "2484": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2485": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2486": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "POP",
      "path": "13"
    },
    "2487": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "POP",
      "path": "13"
    },
    "2488": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "POP",
      "path": "13"
    },
    "2489": {
      "fn": "BufferChainlink.write",
      "offset": [
        2691,
        3831
      ],
      "op": "POP",
      "path": "13"
    },
    "2490": {
      "fn": "BufferChainlink.write",
      "jump": "o",
      "offset": [
        2691,
        3831
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2491": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2204,
        2385
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2492": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2304,
        2351
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 52,
      "value": "0x5A0"
    },
    "2495": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2315,
        2318
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2496": {
      "offset": [
        354,
        355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2498": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2338,
        2343
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2499": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2338,
        2350
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2500": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2304,
        2314
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x76D"
    },
    "2503": {
      "fn": "CBORChainlink.encodeBytes",
      "jump": "i",
      "offset": [
        2304,
        2351
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2504": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        4985,
        5604
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2505": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5068,
        5081
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9D0"
    },
    "2508": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5068,
        5081
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2511": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "i",
      "offset": [
        5068,
        5081
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2512": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5068,
        5081
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2513": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5100,
        5103
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2514": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5100,
        5112
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2516": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5100,
        5112
      ],
      "op": "ADD",
      "path": "13"
    },
    "2517": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5100,
        5112
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2518": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5093,
        5096
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2519": {
      "branch": 64,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5093,
        5112
      ],
      "op": "LT",
      "path": "13"
    },
    "2520": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5089,
        5158
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9EC"
    },
    "2523": {
      "branch": 64,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5089,
        5158
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2524": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5122,
        5151
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 53,
      "value": "0x9EC"
    },
    "2527": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5129,
        5132
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2528": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5134,
        5137
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2529": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5134,
        5146
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2531": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5134,
        5146
      ],
      "op": "ADD",
      "path": "13"
    },
    "2532": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5134,
        5146
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2533": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5149,
        5150
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2535": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5134,
        5150
      ],
      "op": "MUL",
      "path": "13"
    },
    "2536": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5122,
        5128
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA88"
    },
    "2539": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "i",
      "offset": [
        5122,
        5151
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2540": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5122,
        5151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2541": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5244,
        5247
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2542": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5238,
        5248
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2543": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5315,
        5321
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2544": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5309,
        5322
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2545": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5427,
        5429
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2547": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5421,
        5424
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2548": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5413,
        5419
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2549": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5409,
        5425
      ],
      "op": "ADD",
      "path": "13"
    },
    "2550": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5405,
        5430
      ],
      "op": "ADD",
      "path": "13"
    },
    "2551": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5451,
        5455
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2552": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5445,
        5449
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2553": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5437,
        5456
      ],
      "op": "MSTORE8",
      "path": "13"
    },
    "2554": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5437,
        5456
      ],
      "op": "POP",
      "path": "13"
    },
    "2555": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5522,
        5528
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2556": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5517,
        5520
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2557": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5514,
        5529
      ],
      "op": "EQ",
      "path": "13"
    },
    "2558": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5511,
        5513
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2559": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5511,
        5513
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA09"
    },
    "2562": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5511,
        5513
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2563": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5567,
        5568
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2565": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5559,
        5565
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2566": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5555,
        5569
      ],
      "op": "ADD",
      "path": "13"
    },
    "2567": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5547,
        5553
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2568": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5540,
        5570
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2569": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5511,
        5513
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2570": {
      "op": "POP"
    },
    "2571": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5596,
        5599
      ],
      "op": "SWAP4",
      "path": "13",
      "statement": 54
    },
    "2572": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5596,
        5599
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2573": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        4985,
        5604
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "o",
      "offset": [
        4985,
        5604
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2579": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8650,
        9292
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2580": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8739,
        8752
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA1B"
    },
    "2583": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8739,
        8752
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD4"
    },
    "2586": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        8739,
        8752
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2587": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8739,
        8752
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2588": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8776,
        8779
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2589": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8776,
        8788
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2591": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8776,
        8788
      ],
      "op": "ADD",
      "path": "13"
    },
    "2592": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8776,
        8788
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2593": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8770,
        8773
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2594": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8764,
        8767
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2595": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8764,
        8773
      ],
      "op": "ADD",
      "path": "13"
    },
    "2596": {
      "branch": 65,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8764,
        8788
      ],
      "op": "GT",
      "path": "13"
    },
    "2597": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8760,
        8833
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2598": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8760,
        8833
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA38"
    },
    "2601": {
      "branch": 65,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8760,
        8833
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2602": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8798,
        8826
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 55,
      "value": "0xA38"
    },
    "2605": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8805,
        8808
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2606": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8817,
        8820
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2607": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8811,
        8814
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2608": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8811,
        8820
      ],
      "op": "ADD",
      "path": "13"
    },
    "2609": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8824,
        8825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2611": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8810,
        8825
      ],
      "op": "MUL",
      "path": "13"
    },
    "2612": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8798,
        8804
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA88"
    },
    "2615": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        8798,
        8826
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2616": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8798,
        8826
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2617": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8839,
        8848
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2619": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8864,
        8865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2621": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8858,
        8861
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2622": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8851,
        8854
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2625": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8851,
        8861
      ],
      "op": "EXP",
      "path": "13"
    },
    "2626": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8851,
        8865
      ],
      "op": "SUB",
      "path": "13"
    },
    "2627": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8839,
        8865
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2628": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8839,
        8865
      ],
      "op": "POP",
      "path": "13"
    },
    "2629": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8951,
        8954
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2630": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8945,
        8955
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2631": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9066,
        9069
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2632": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9060,
        9063
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2633": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9052,
        9058
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2634": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9048,
        9064
      ],
      "op": "ADD",
      "path": "13"
    },
    "2635": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9044,
        9070
      ],
      "op": "ADD",
      "path": "13"
    },
    "2636": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9122,
        9126
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2637": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9118
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2638": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9110,
        9119
      ],
      "op": "NOT",
      "path": "13"
    },
    "2639": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9103,
        9107
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2640": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9097,
        9108
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2641": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9093,
        9120
      ],
      "op": "AND",
      "path": "13"
    },
    "2642": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9090,
        9127
      ],
      "op": "OR",
      "path": "13"
    },
    "2643": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9084,
        9088
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2644": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9077,
        9128
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2645": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9077,
        9128
      ],
      "op": "POP",
      "path": "13"
    },
    "2646": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9210,
        9216
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2647": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9204,
        9217
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2648": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9198,
        9201
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2649": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9196
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2650": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9189,
        9202
      ],
      "op": "ADD",
      "path": "13"
    },
    "2651": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9186,
        9218
      ],
      "op": "GT",
      "path": "13"
    },
    "2652": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9183,
        9185
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2653": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9183,
        9185
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA66"
    },
    "2656": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9183,
        9185
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2657": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9253,
        9256
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2658": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9248,
        9251
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2659": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9244,
        9257
      ],
      "op": "ADD",
      "path": "13"
    },
    "2660": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9236,
        9242
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2661": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9229,
        9258
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2662": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9183,
        9185
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2663": {
      "op": "POP"
    },
    "2664": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9284,
        9287
      ],
      "op": "SWAP5",
      "path": "13",
      "statement": 56
    },
    "2665": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9284,
        9287
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2666": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8650,
        9292
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "fn": "BufferChainlink.writeInt",
      "jump": "o",
      "offset": [
        8650,
        9292
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2673": {
      "fn": "BufferChainlink.max",
      "offset": [
        1929,
        2043
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2674": {
      "fn": "BufferChainlink.max",
      "offset": [
        1979,
        1983
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2676": {
      "fn": "BufferChainlink.max",
      "offset": [
        1999,
        2000
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2677": {
      "fn": "BufferChainlink.max",
      "offset": [
        1995,
        1996
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2678": {
      "branch": 66,
      "fn": "BufferChainlink.max",
      "offset": [
        1995,
        2000
      ],
      "op": "GT",
      "path": "13"
    },
    "2679": {
      "fn": "BufferChainlink.max",
      "offset": [
        1991,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2680": {
      "fn": "BufferChainlink.max",
      "offset": [
        1991,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA82"
    },
    "2683": {
      "branch": 66,
      "fn": "BufferChainlink.max",
      "offset": [
        1991,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "fn": "BufferChainlink.max",
      "offset": [
        2017,
        2018
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 57
    },
    "2686": {
      "fn": "BufferChainlink.max",
      "offset": [
        2010,
        2018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x767"
    },
    "2689": {
      "fn": "BufferChainlink.max",
      "offset": [
        2010,
        2018
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2690": {
      "fn": "BufferChainlink.max",
      "offset": [
        1991,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "fn": "BufferChainlink.max",
      "offset": [
        2037,
        2038
      ],
      "op": "SWAP2",
      "path": "13",
      "statement": 58
    },
    "2693": {
      "fn": "BufferChainlink.max",
      "offset": [
        1929,
        2043
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "fn": "BufferChainlink.max",
      "jump": "o",
      "offset": [
        1929,
        2043
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2696": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1772,
        1925
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2697": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1863,
        1870
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2698": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1863,
        1870
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2699": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1876,
        1895
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 59,
      "value": "0xA94"
    },
    "2702": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1863,
        1866
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2703": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1886,
        1894
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2704": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1876,
        1880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x72D"
    },
    "2707": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1876,
        1895
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2708": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1876,
        1895
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2709": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1876,
        1895
      ],
      "op": "POP",
      "path": "13"
    },
    "2710": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1901,
        1920
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 60,
      "value": "0x841"
    },
    "2713": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1911
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2714": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1913,
        1919
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2715": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1901,
        1907
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x847"
    },
    "2718": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1901,
        1920
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2719": {
      "op": "JUMPDEST"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2722": {
      "op": "DUP1"
    },
    "2723": {
      "op": "MLOAD"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2726": {
      "op": "DUP2"
    },
    "2727": {
      "op": "ADD"
    },
    "2728": {
      "op": "DUP3"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2732": {
      "op": "DUP1"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "MSTORE"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2737": {
      "op": "DUP3"
    },
    "2738": {
      "op": "ADD"
    },
    "2739": {
      "op": "DUP2"
    },
    "2740": {
      "op": "SWAP1"
    },
    "2741": {
      "op": "MSTORE"
    },
    "2742": {
      "op": "SWAP2"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "SWAP1"
    },
    "2747": {
      "op": "MSTORE"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2750": {
      "op": "DUP2"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "SWAP2"
    },
    "2753": {
      "op": "SWAP1"
    },
    "2754": {
      "op": "SWAP2"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2763": {
      "op": "PUSH2",
      "value": "0xAD4"
    },
    "2766": {
      "op": "JUMP"
    },
    "2767": {
      "op": "JUMPDEST"
    },
    "2768": {
      "op": "SWAP1"
    },
    "2769": {
      "op": "MSTORE"
    },
    "2770": {
      "op": "SWAP1"
    },
    "2771": {
      "op": "JUMP"
    },
    "2772": {
      "op": "JUMPDEST"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2775": {
      "op": "MLOAD"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2779": {
      "op": "ADD"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "DUP1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2786": {
      "op": "DUP2"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2793": {
      "op": "DUP2"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "op": "SWAP1"
    },
    "2797": {
      "op": "JUMP"
    }
  },
  "sha1": "7b715fa73c56d69d892901304a67236a73fabe32",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/ChainlinkClient.sol\";\n\ncontract APIConsumer is ChainlinkClient {\n  \n    uint256 public volume;\n    \n    address private oracle;\n    bytes32 private jobId;\n    uint256 private fee;\n    \n    /**\n     * Network: Kovan\n     * Oracle: 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e\n     * Job ID: 29fa9aa13bf1468788b7cc4a500a45b8\n     * Fee: 0.1 LINK\n     */\n    constructor(address _oracle, string memory _jobId, uint256 _fee, address _link) public {\n        if (_link == address(0)) {\n            setPublicChainlinkToken();\n        } else {\n            setChainlinkToken(_link);\n        }\n        // oracle = 0x2f90A6D021db21e1B2A077c5a37B3C7E75D15b7e;\n        // jobId = \"29fa9aa13bf1468788b7cc4a500a45b8\";\n        // fee = 0.1 * 10 ** 18; // 0.1 LINK\n        oracle = _oracle;\n        jobId = stringToBytes32(_jobId);\n        fee = _fee;\n    }\n    \n    /**\n     * Create a Chainlink request to retrieve API response, find the target\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\n     */\n    function requestVolumeData() public returns (bytes32 requestId) \n    {\n        Chainlink.Request memory request = buildChainlinkRequest(jobId, address(this), this.fulfill.selector);\n        \n        // Set the URL to perform the GET request on\n        request.add(\"get\", \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=ETH&tsyms=USD\");\n        \n        // Set the path to find the desired data in the API response, where the response format is:\n        // {\"RAW\":\n        //   {\"ETH\":\n        //    {\"USD\":\n        //     {\n        //      \"VOLUME24HOUR\": xxx.xxx,\n        //     }\n        //    }\n        //   }\n        //  }\n        request.add(\"path\", \"RAW.ETH.USD.VOLUME24HOUR\");\n        \n        // Multiply the result by 1000000000000000000 to remove decimals\n        int timesAmount = 10**18;\n        request.addInt(\"times\", timesAmount);\n        \n        // Sends the request\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n    \n    /**\n     * Receive the response in the form of uint256\n     */ \n    function fulfill(bytes32 _requestId, uint256 _volume) public recordChainlinkFulfillment(_requestId)\n    {\n        volume = _volume;\n    }\n\n    function stringToBytes32(string memory source) public pure returns (bytes32 result) {\n        bytes memory tempEmptyStringTest = bytes(source);\n        if (tempEmptyStringTest.length == 0) {\n            return 0x0;\n        }\n\n        assembly {\n            result := mload(add(source, 32))\n        }\n    }\n}\n",
  "sourceMap": "118:2496:17:-:0;;;1163:1:4;1132:32;;449:484:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;449:484:17;;;;;;;;;;-1:-1:-1;449:484:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;449:484:17;;;;;;;;;;;;;-1:-1:-1;449:484:17;-1:-1:-1;;;;;;550:19:17;;546:130;;585:25;:23;:25::i;:::-;546:130;;;641:24;659:5;641:17;:24::i;:::-;849:6;:16;;-1:-1:-1;;;;;;849:16:17;-1:-1:-1;;;;;849:16:17;;;;;883:23;899:6;883:15;:23::i;:::-;875:5;:31;-1:-1:-1;916:3:17;:10;-1:-1:-1;118:2496:17;;-1:-1:-1;118:2496:17;5051:123:4;5101:68;951:42;-1:-1:-1;;;;;5119:47:4;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5119:49:4;5101:17;:68::i;:::-;5051:123::o;4834:94::-;4891:4;:32;;-1:-1:-1;;;;;;4891:32:4;-1:-1:-1;;;;;4891:32:4;;;;;;;;;;4834:94::o;2307:305:17:-;2463:26;;2375:14;;2442:6;;2459:72;;-1:-1:-1;2517:3:17;;-1:-1:-1;2510:10:17;;2459:72;-1:-1:-1;;2592:2:17;2580:15;;2574:22;2550:56;;;;:::o;118:2496::-;;;;;;;",
  "sourcePath": "contracts/APIConsumer.sol",
  "type": "contract"
}